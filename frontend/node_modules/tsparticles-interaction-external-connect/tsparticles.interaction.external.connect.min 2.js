/*! tsParticles Connect External Interaction v2.0.6 by Matteo Bruni */
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("tsparticles-engine"));else if("function"==typeof define&&define.amd)define(["tsparticles-engine"],t);else{var n="object"==typeof exports?t(require("tsparticles-engine")):t(e.window);for(var o in n)("object"==typeof exports?exports:e)[o]=n[o]}}(this,(e=>(()=>{"use strict";var t={818:t=>{t.exports=e}},n={};function o(e){var r=n[e];if(void 0!==r)return r.exports;var i=n[e]={exports:{}};return t[e](i,i.exports,o),i.exports}o.d=(e,t)=>{for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};return(()=>{o.r(r),o.d(r,{loadExternalConnectInteraction:()=>n});var e=o(818);class t extends e.ExternalInteractorBase{constructor(e){super(e)}isEnabled(){const t=this.container,n=t.interactivity.mouse,o=t.actualOptions.interactivity.events;return!(!o.onHover.enable||!n.position)&&(0,e.isInArray)("connect",o.onHover.mode)}reset(){}async interact(){const e=this.container;if(e.actualOptions.interactivity.events.onHover.enable&&"mousemove"===e.interactivity.status){const t=e.interactivity.mouse.position;if(!t)return;const n=Math.abs(e.retina.connectModeRadius),o=e.particles.quadTree.queryCircle(t,n);let r=0;for(const t of o){const n=t.getPosition();for(const i of o.slice(r+1)){const o=i.getPosition(),r=Math.abs(e.retina.connectModeDistance),a=Math.abs(n.x-o.x),s=Math.abs(n.y-o.y);a<r&&s<r&&e.canvas.drawConnectLine(t,i)}++r}}}}async function n(e){await e.addInteractor("externalConnect",(e=>new t(e)))}})(),r})()));