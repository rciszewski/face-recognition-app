/*! tsParticles Bounce External Interaction v2.0.6 by Matteo Bruni */
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("tsparticles-engine"));else if("function"==typeof define&&define.amd)define(["tsparticles-engine"],t);else{var o="object"==typeof exports?t(require("tsparticles-engine")):t(e.window);for(var n in o)("object"==typeof exports?exports:e)[n]=o[n]}}(this,(e=>(()=>{"use strict";var t={818:t=>{t.exports=e}},o={};function n(e){var r=o[e];if(void 0!==r)return r.exports;var i=o[e]={exports:{}};return t[e](i,i.exports,n),i.exports}n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};return(()=>{n.r(r),n.d(r,{loadExternalBounceInteraction:()=>o});var e=n(818);class t extends e.ExternalInteractorBase{constructor(e){super(e)}isEnabled(){const t=this.container,o=t.actualOptions,n=t.interactivity.mouse,r=o.interactivity.events,i=r.onDiv;return n.position&&r.onHover.enable&&(0,e.isInArray)("bounce",r.onHover.mode)||(0,e.isDivModeEnabled)("bounce",i)}async interact(){const t=this.container,o=t.actualOptions.interactivity.events,n=t.interactivity.status===e.mouseMoveEvent,r=o.onHover.enable,i=o.onHover.mode,c=o.onDiv;n&&r&&(0,e.isInArray)("bounce",i)?this.processMouseBounce():(0,e.divModeExecute)("bounce",c,((e,t)=>this.singleSelectorBounce(e,t)))}reset(){}processMouseBounce(){const t=this.container,o=10*t.retina.pixelRatio,n=t.interactivity.mouse.position,r=t.retina.bounceModeDistance;n&&this.processBounce(n,r,new e.Circle(n.x,n.y,r+o))}singleSelectorBounce(t,o){const n=this.container,r=document.querySelectorAll(t);r.length&&r.forEach((t=>{const r=t,i=n.retina.pixelRatio,c={x:(r.offsetLeft+r.offsetWidth/2)*i,y:(r.offsetTop+r.offsetHeight/2)*i},s=r.offsetWidth/2*i,a=10*i,u="circle"===o.type?new e.Circle(c.x,c.y,s+a):new e.Rectangle(r.offsetLeft*i-a,r.offsetTop*i-a,r.offsetWidth*i+2*a,r.offsetHeight*i+2*a);this.processBounce(c,s,u)}))}processBounce(t,o,n){const r=this.container.particles.quadTree.query(n);for(const i of r)n instanceof e.Circle?(0,e.circleBounce)((0,e.circleBounceDataFromParticle)(i),{position:t,radius:o,mass:o**2*Math.PI/2,velocity:e.Vector.origin,factor:e.Vector.origin}):n instanceof e.Rectangle&&(0,e.rectBounce)(i,(0,e.calculateBounds)(t,o))}}async function o(e){await e.addInteractor("externalBounce",(e=>new t(e)))}})(),r})()));