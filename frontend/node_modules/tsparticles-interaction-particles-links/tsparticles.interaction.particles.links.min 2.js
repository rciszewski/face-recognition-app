/*! tsParticles Links Particles Interaction v2.0.6 by Matteo Bruni */
!function(t,i){if("object"==typeof exports&&"object"==typeof module)module.exports=i(require("tsparticles-engine"));else if("function"==typeof define&&define.amd)define(["tsparticles-engine"],i);else{var n="object"==typeof exports?i(require("tsparticles-engine")):i(t.window);for(var e in n)("object"==typeof exports?exports:t)[e]=n[e]}}(this,(t=>(()=>{"use strict";var i={818:i=>{i.exports=t}},n={};function e(t){var o=n[t];if(void 0!==o)return o.exports;var s=n[t]={exports:{}};return i[t](s,s.exports,e),s.exports}e.d=(t,i)=>{for(var n in i)e.o(i,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:i[n]})},e.o=(t,i)=>Object.prototype.hasOwnProperty.call(t,i),e.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var o={};return(()=>{e.r(o),e.d(o,{loadParticlesLinksInteraction:()=>a});var t=e(818);function i(i,n,e,o,s){let r=(0,t.getDistance)(i,n);if(!s||r<=e)return r;const a={x:n.x-o.width,y:n.y};if(r=(0,t.getDistance)(i,a),r<=e)return r;const l={x:n.x-o.width,y:n.y-o.height};if(r=(0,t.getDistance)(i,l),r<=e)return r;const c={x:n.x,y:n.y-o.height};return r=(0,t.getDistance)(i,c),r}class n extends t.ParticlesInteractorBase{constructor(t){super(t)}isEnabled(t){return t.options.links.enable}reset(){}async interact(n){var e;n.links=[];const o=n.getPosition(),s=this.container,r=s.canvas.size;if(o.x<0||o.y<0||o.x>r.width||o.y>r.height)return;const a=n.options.links,l=a.opacity,c=null!==(e=n.retina.linksDistance)&&void 0!==e?e:s.retina.linksDistance,d=a.warp,p=d?new t.CircleWarp(o.x,o.y,c,r):new t.Circle(o.x,o.y,c),g=s.particles.quadTree.query(p);for(const t of g){const e=t.options.links;if(n===t||!e.enable||a.id!==e.id||t.spawning||t.destroyed||-1!==n.links.map((t=>t.destination)).indexOf(t)||-1!==t.links.map((t=>t.destination)).indexOf(n))continue;const s=t.getPosition();if(s.x<0||s.y<0||s.x>r.width||s.y>r.height)continue;const p=i(o,s,c,r,d&&e.warp);if(p>c)return;const g=(1-p/c)*l;this.setColor(n),n.links.push({destination:t,opacity:g})}}setColor(i){const n=this.container,e=i.options.links;let o=void 0===e.id?n.particles.linksColor:n.particles.linksColors.get(e.id);if(!o){const i=e.color;o=(0,t.getLinkRandomColor)(i,e.blink,e.consent),void 0===e.id?n.particles.linksColor=o:n.particles.linksColors.set(e.id,o)}}}class s{constructor(t){this.container=t}particleCreated(t){t.links=[]}particleDestroyed(t){t.links=[]}drawParticle(t,i){const n=i,e=this.container,o=e.particles,s=i.options;if(n.links.length<=0)return;t.save();const r=n.links.filter((t=>e.particles.getLinkFrequency(n,t.destination)<=s.links.frequency));for(const t of r){const i=t.destination;if(s.links.triangles.enable){const a=r.map((t=>t.destination)),l=i.links.filter((t=>e.particles.getLinkFrequency(i,t.destination)<=i.options.links.frequency&&a.indexOf(t.destination)>=0));if(l.length)for(const e of l){const r=e.destination;o.getTriangleFrequency(n,i,r)>s.links.triangles.frequency||this.drawLinkTriangle(n,t,e)}}t.opacity>0&&e.retina.linksWidth>0&&this.drawLinkLine(n,t)}t.restore()}drawLinkTriangle(i,n,e){var o;const s=this.container,r=s.actualOptions,a=n.destination,l=e.destination,c=i.options.links.triangles,d=null!==(o=c.opacity)&&void 0!==o?o:(n.opacity+e.opacity)/2;d<=0||s.canvas.draw((n=>{const e=i.getPosition(),o=a.getPosition(),p=l.getPosition();if((0,t.getDistance)(e,o)>s.retina.linksDistance||(0,t.getDistance)(p,o)>s.retina.linksDistance||(0,t.getDistance)(p,e)>s.retina.linksDistance)return;let g=(0,t.colorToRgb)(c.color);if(!g){const n=i.options.links,e=void 0!==n.id?s.particles.linksColors.get(n.id):s.particles.linksColor;g=(0,t.getLinkColor)(i,a,e)}g&&function(i,n,e,o,s,r,a,l){(0,t.drawTriangle)(i,n,e,o),s&&(i.globalCompositeOperation=r),i.fillStyle=(0,t.getStyleFromRgb)(a,l),i.fill()}(n,e,o,p,r.backgroundMask.enable,r.backgroundMask.composite,g,d)}))}drawLinkLine(i,n){const e=this.container,o=e.actualOptions,s=n.destination,r=i.getPosition(),a=s.getPosition();let l=n.opacity;e.canvas.draw((n=>{var c,d;let p;const g=i.options.twinkle.lines;if(g.enable){const i=g.frequency,n=(0,t.colorToRgb)(g.color);Math.random()<i&&n&&(p=n,l=(0,t.getRangeValue)(g.opacity))}if(!p){const n=i.options.links,o=void 0!==n.id?e.particles.linksColors.get(n.id):e.particles.linksColor;p=(0,t.getLinkColor)(i,s,o)}if(!p)return;const y=null!==(c=i.retina.linksWidth)&&void 0!==c?c:e.retina.linksWidth,f=null!==(d=i.retina.linksDistance)&&void 0!==d?d:e.retina.linksDistance;!function(i,n,e,o,s,r,a,l,c,d,p,g){let y=!1;if((0,t.getDistance)(e,o)<=s)(0,t.drawLine)(i,e,o),y=!0;else if(a){let n,a;const l={x:o.x-r.width,y:o.y},c=(0,t.getDistances)(e,l);if(c.distance<=s){const t=e.y-c.dy/c.dx*e.x;n={x:0,y:t},a={x:r.width,y:t}}else{const i={x:o.x,y:o.y-r.height},l=(0,t.getDistances)(e,i);if(l.distance<=s){const t=-(e.y-l.dy/l.dx*e.x)/(l.dy/l.dx);n={x:t,y:0},a={x:t,y:r.height}}else{const i={x:o.x-r.width,y:o.y-r.height},l=(0,t.getDistances)(e,i);if(l.distance<=s){const t=e.y-l.dy/l.dx*e.x;n={x:-t/(l.dy/l.dx),y:t},a={x:n.x+r.width,y:n.y+r.height}}}}n&&a&&((0,t.drawLine)(i,e,n),(0,t.drawLine)(i,o,a),y=!0)}if(y){if(i.lineWidth=n,l&&(i.globalCompositeOperation=c),i.strokeStyle=(0,t.getStyleFromRgb)(d,p),g.enable){const n=(0,t.colorToRgb)(g.color);n&&(i.shadowBlur=g.blur,i.shadowColor=(0,t.getStyleFromRgb)(n))}i.stroke()}}(n,y,r,a,f,e.canvas.size,i.options.links.warp,o.backgroundMask.enable,o.backgroundMask.composite,p,l,i.options.links.shadow)}))}}class r{constructor(){this.id="links"}getPlugin(t){return new s(t)}needsPlugin(){return!0}loadOptions(){}}async function a(t){await async function(t){await t.addInteractor("particlesLinks",(t=>new n(t)))}(t),await async function(t){const i=new r;await t.addPlugin(i)}(t)}})(),o})()));