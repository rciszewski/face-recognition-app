{"ast":null,"code":"import { clamp, getRandom, getRangeMax, getRangeMin, getRangeValue, randomInRange } from \"tsparticles-engine\";\n\nfunction checkDestroy(particle, value, minValue, maxValue) {\n  switch (particle.options.opacity.animation.destroy) {\n    case \"max\":\n      if (value >= maxValue) {\n        particle.destroy();\n      }\n\n      break;\n\n    case \"min\":\n      if (value <= minValue) {\n        particle.destroy();\n      }\n\n      break;\n  }\n}\n\nfunction updateOpacity(particle, delta) {\n  var _a, _b, _c, _d, _e, _f;\n\n  if (!particle.opacity) {\n    return;\n  }\n\n  const minValue = particle.opacity.min,\n        maxValue = particle.opacity.max,\n        decay = (_a = particle.opacity.decay) !== null && _a !== void 0 ? _a : 1;\n\n  if (particle.destroyed || !particle.opacity.enable || ((_b = particle.opacity.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 && ((_c = particle.opacity.loops) !== null && _c !== void 0 ? _c : 0) > ((_d = particle.opacity.maxLoops) !== null && _d !== void 0 ? _d : 0)) {\n    return;\n  }\n\n  switch (particle.opacity.status) {\n    case 0:\n      if (particle.opacity.value >= maxValue) {\n        particle.opacity.status = 1;\n\n        if (!particle.opacity.loops) {\n          particle.opacity.loops = 0;\n        }\n\n        particle.opacity.loops++;\n      } else {\n        particle.opacity.value += ((_e = particle.opacity.velocity) !== null && _e !== void 0 ? _e : 0) * delta.factor;\n      }\n\n      break;\n\n    case 1:\n      if (particle.opacity.value <= minValue) {\n        particle.opacity.status = 0;\n\n        if (!particle.opacity.loops) {\n          particle.opacity.loops = 0;\n        }\n\n        particle.opacity.loops++;\n      } else {\n        particle.opacity.value -= ((_f = particle.opacity.velocity) !== null && _f !== void 0 ? _f : 0) * delta.factor;\n      }\n\n      break;\n  }\n\n  if (particle.opacity.velocity && particle.opacity.decay !== 1) {\n    particle.opacity.velocity *= decay;\n  }\n\n  checkDestroy(particle, particle.opacity.value, minValue, maxValue);\n\n  if (!particle.destroyed) {\n    particle.opacity.value = clamp(particle.opacity.value, minValue, maxValue);\n  }\n}\n\nexport class OpacityUpdater {\n  constructor(container) {\n    this.container = container;\n  }\n\n  init(particle) {\n    const opacityOptions = particle.options.opacity;\n    particle.opacity = {\n      enable: opacityOptions.animation.enable,\n      max: getRangeMax(opacityOptions.value),\n      min: getRangeMin(opacityOptions.value),\n      value: getRangeValue(opacityOptions.value),\n      loops: 0,\n      maxLoops: getRangeValue(opacityOptions.animation.count)\n    };\n    const opacityAnimation = opacityOptions.animation;\n\n    if (opacityAnimation.enable) {\n      particle.opacity.decay = 1 - getRangeValue(opacityAnimation.decay);\n      particle.opacity.status = 0;\n      const opacityRange = opacityOptions.value;\n      particle.opacity.min = getRangeMin(opacityRange);\n      particle.opacity.max = getRangeMax(opacityRange);\n\n      switch (opacityAnimation.startValue) {\n        case \"min\":\n          particle.opacity.value = particle.opacity.min;\n          particle.opacity.status = 0;\n          break;\n\n        case \"random\":\n          particle.opacity.value = randomInRange(particle.opacity);\n          particle.opacity.status = getRandom() >= 0.5 ? 0 : 1;\n          break;\n\n        case \"max\":\n        default:\n          particle.opacity.value = particle.opacity.max;\n          particle.opacity.status = 1;\n          break;\n      }\n\n      particle.opacity.velocity = getRangeValue(opacityAnimation.speed) / 100 * this.container.retina.reduceFactor;\n\n      if (!opacityAnimation.sync) {\n        particle.opacity.velocity *= getRandom();\n      }\n    }\n  }\n\n  isEnabled(particle) {\n    var _a, _b, _c, _d;\n\n    return !particle.destroyed && !particle.spawning && !!particle.opacity && particle.opacity.enable && (((_a = particle.opacity.maxLoops) !== null && _a !== void 0 ? _a : 0) <= 0 || ((_b = particle.opacity.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 && ((_c = particle.opacity.loops) !== null && _c !== void 0 ? _c : 0) < ((_d = particle.opacity.maxLoops) !== null && _d !== void 0 ? _d : 0));\n  }\n\n  reset(particle) {\n    if (particle.opacity) {\n      particle.opacity.loops = 0;\n    }\n  }\n\n  update(particle, delta) {\n    if (!this.isEnabled(particle)) {\n      return;\n    }\n\n    updateOpacity(particle, delta);\n  }\n\n}","map":{"version":3,"names":["clamp","getRandom","getRangeMax","getRangeMin","getRangeValue","randomInRange","checkDestroy","particle","value","minValue","maxValue","options","opacity","animation","destroy","updateOpacity","delta","_a","_b","_c","_d","_e","_f","min","max","decay","destroyed","enable","maxLoops","loops","status","velocity","factor","OpacityUpdater","constructor","container","init","opacityOptions","count","opacityAnimation","opacityRange","startValue","speed","retina","reduceFactor","sync","isEnabled","spawning","reset","update"],"sources":["/Users/ronciszewski/Desktop/Programming/SmartBrain/face-recognition-app/node_modules/tsparticles-updater-opacity/esm/OpacityUpdater.js"],"sourcesContent":["import { clamp, getRandom, getRangeMax, getRangeMin, getRangeValue, randomInRange, } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.opacity.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nfunction updateOpacity(particle, delta) {\n    var _a, _b, _c, _d, _e, _f;\n    if (!particle.opacity) {\n        return;\n    }\n    const minValue = particle.opacity.min, maxValue = particle.opacity.max, decay = (_a = particle.opacity.decay) !== null && _a !== void 0 ? _a : 1;\n    if (particle.destroyed ||\n        !particle.opacity.enable ||\n        (((_b = particle.opacity.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 && ((_c = particle.opacity.loops) !== null && _c !== void 0 ? _c : 0) > ((_d = particle.opacity.maxLoops) !== null && _d !== void 0 ? _d : 0))) {\n        return;\n    }\n    switch (particle.opacity.status) {\n        case 0:\n            if (particle.opacity.value >= maxValue) {\n                particle.opacity.status = 1;\n                if (!particle.opacity.loops) {\n                    particle.opacity.loops = 0;\n                }\n                particle.opacity.loops++;\n            }\n            else {\n                particle.opacity.value += ((_e = particle.opacity.velocity) !== null && _e !== void 0 ? _e : 0) * delta.factor;\n            }\n            break;\n        case 1:\n            if (particle.opacity.value <= minValue) {\n                particle.opacity.status = 0;\n                if (!particle.opacity.loops) {\n                    particle.opacity.loops = 0;\n                }\n                particle.opacity.loops++;\n            }\n            else {\n                particle.opacity.value -= ((_f = particle.opacity.velocity) !== null && _f !== void 0 ? _f : 0) * delta.factor;\n            }\n            break;\n    }\n    if (particle.opacity.velocity && particle.opacity.decay !== 1) {\n        particle.opacity.velocity *= decay;\n    }\n    checkDestroy(particle, particle.opacity.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        particle.opacity.value = clamp(particle.opacity.value, minValue, maxValue);\n    }\n}\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity;\n        particle.opacity = {\n            enable: opacityOptions.animation.enable,\n            max: getRangeMax(opacityOptions.value),\n            min: getRangeMin(opacityOptions.value),\n            value: getRangeValue(opacityOptions.value),\n            loops: 0,\n            maxLoops: getRangeValue(opacityOptions.animation.count),\n        };\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.decay = 1 - getRangeValue(opacityAnimation.decay);\n            particle.opacity.status = 0;\n            const opacityRange = opacityOptions.value;\n            particle.opacity.min = getRangeMin(opacityRange);\n            particle.opacity.max = getRangeMax(opacityRange);\n            switch (opacityAnimation.startValue) {\n                case \"min\":\n                    particle.opacity.value = particle.opacity.min;\n                    particle.opacity.status = 0;\n                    break;\n                case \"random\":\n                    particle.opacity.value = randomInRange(particle.opacity);\n                    particle.opacity.status =\n                        getRandom() >= 0.5 ? 0 : 1;\n                    break;\n                case \"max\":\n                default:\n                    particle.opacity.value = particle.opacity.max;\n                    particle.opacity.status = 1;\n                    break;\n            }\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / 100) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c, _d;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            (((_a = particle.opacity.maxLoops) !== null && _a !== void 0 ? _a : 0) <= 0 ||\n                (((_b = particle.opacity.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 &&\n                    ((_c = particle.opacity.loops) !== null && _c !== void 0 ? _c : 0) < ((_d = particle.opacity.maxLoops) !== null && _d !== void 0 ? _d : 0))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateOpacity(particle, delta);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}