{"ast":null,"code":"import { getRandom } from \"tsparticles-engine\";\n\nfunction randomSquareCoordinate(position, offset) {\n  return position + offset * (getRandom() - 0.5);\n}\n\nexport class SquareShape {\n  randomPosition(position, size, fill) {\n    if (fill) {\n      return {\n        x: randomSquareCoordinate(position.x, size.width),\n        y: randomSquareCoordinate(position.y, size.height)\n      };\n    } else {\n      const halfW = size.width / 2,\n            halfH = size.height / 2,\n            side = Math.floor(getRandom() * 4),\n            v = (getRandom() - 0.5) * 2;\n\n      switch (side) {\n        case 0:\n          return {\n            x: position.x + v * halfW,\n            y: position.y - halfH\n          };\n\n        case 1:\n          return {\n            x: position.x - halfW,\n            y: position.y + v * halfH\n          };\n\n        case 2:\n          return {\n            x: position.x + v * halfW,\n            y: position.y + halfH\n          };\n\n        case 3:\n        default:\n          return {\n            x: position.x + halfW,\n            y: position.y + v * halfH\n          };\n      }\n    }\n  }\n\n}","map":{"version":3,"names":["getRandom","randomSquareCoordinate","position","offset","SquareShape","randomPosition","size","fill","x","width","y","height","halfW","halfH","side","Math","floor","v"],"sources":["/Users/ronciszewski/Desktop/Programming/SmartBrain/face-recognition-app/node_modules/tsparticles-plugin-emitters/esm/Shapes/Square/SquareShape.js"],"sourcesContent":["import { getRandom } from \"tsparticles-engine\";\nfunction randomSquareCoordinate(position, offset) {\n    return position + offset * (getRandom() - 0.5);\n}\nexport class SquareShape {\n    randomPosition(position, size, fill) {\n        if (fill) {\n            return {\n                x: randomSquareCoordinate(position.x, size.width),\n                y: randomSquareCoordinate(position.y, size.height),\n            };\n        }\n        else {\n            const halfW = size.width / 2, halfH = size.height / 2, side = Math.floor(getRandom() * 4), v = (getRandom() - 0.5) * 2;\n            switch (side) {\n                case 0:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y - halfH,\n                    };\n                case 1:\n                    return {\n                        x: position.x - halfW,\n                        y: position.y + v * halfH,\n                    };\n                case 2:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y + halfH,\n                    };\n                case 3:\n                default:\n                    return {\n                        x: position.x + halfW,\n                        y: position.y + v * halfH,\n                    };\n            }\n        }\n    }\n}\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;;AACA,SAASC,sBAAT,CAAgCC,QAAhC,EAA0CC,MAA1C,EAAkD;EAC9C,OAAOD,QAAQ,GAAGC,MAAM,IAAIH,SAAS,KAAK,GAAlB,CAAxB;AACH;;AACD,OAAO,MAAMI,WAAN,CAAkB;EACrBC,cAAc,CAACH,QAAD,EAAWI,IAAX,EAAiBC,IAAjB,EAAuB;IACjC,IAAIA,IAAJ,EAAU;MACN,OAAO;QACHC,CAAC,EAAEP,sBAAsB,CAACC,QAAQ,CAACM,CAAV,EAAaF,IAAI,CAACG,KAAlB,CADtB;QAEHC,CAAC,EAAET,sBAAsB,CAACC,QAAQ,CAACQ,CAAV,EAAaJ,IAAI,CAACK,MAAlB;MAFtB,CAAP;IAIH,CALD,MAMK;MACD,MAAMC,KAAK,GAAGN,IAAI,CAACG,KAAL,GAAa,CAA3B;MAAA,MAA8BI,KAAK,GAAGP,IAAI,CAACK,MAAL,GAAc,CAApD;MAAA,MAAuDG,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWhB,SAAS,KAAK,CAAzB,CAA9D;MAAA,MAA2FiB,CAAC,GAAG,CAACjB,SAAS,KAAK,GAAf,IAAsB,CAArH;;MACA,QAAQc,IAAR;QACI,KAAK,CAAL;UACI,OAAO;YACHN,CAAC,EAAEN,QAAQ,CAACM,CAAT,GAAaS,CAAC,GAAGL,KADjB;YAEHF,CAAC,EAAER,QAAQ,CAACQ,CAAT,GAAaG;UAFb,CAAP;;QAIJ,KAAK,CAAL;UACI,OAAO;YACHL,CAAC,EAAEN,QAAQ,CAACM,CAAT,GAAaI,KADb;YAEHF,CAAC,EAAER,QAAQ,CAACQ,CAAT,GAAaO,CAAC,GAAGJ;UAFjB,CAAP;;QAIJ,KAAK,CAAL;UACI,OAAO;YACHL,CAAC,EAAEN,QAAQ,CAACM,CAAT,GAAaS,CAAC,GAAGL,KADjB;YAEHF,CAAC,EAAER,QAAQ,CAACQ,CAAT,GAAaG;UAFb,CAAP;;QAIJ,KAAK,CAAL;QACA;UACI,OAAO;YACHL,CAAC,EAAEN,QAAQ,CAACM,CAAT,GAAaI,KADb;YAEHF,CAAC,EAAER,QAAQ,CAACQ,CAAT,GAAaO,CAAC,GAAGJ;UAFjB,CAAP;MAlBR;IAuBH;EACJ;;AAlCoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}