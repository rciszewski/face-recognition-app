{"ast":null,"code":"import { clamp, getRandom } from \"tsparticles-engine\";\n\nfunction checkDestroy(particle, value, minValue, maxValue) {\n  switch (particle.options.size.animation.destroy) {\n    case \"max\":\n      if (value >= maxValue) {\n        particle.destroy();\n      }\n\n      break;\n\n    case \"min\":\n      if (value <= minValue) {\n        particle.destroy();\n      }\n\n      break;\n  }\n}\n\nfunction updateSize(particle, delta) {\n  var _a, _b, _c, _d, _e;\n\n  const sizeVelocity = ((_a = particle.size.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor,\n        minValue = particle.size.min,\n        maxValue = particle.size.max,\n        decay = (_b = particle.size.decay) !== null && _b !== void 0 ? _b : 1;\n\n  if (particle.destroyed || !particle.size.enable || ((_c = particle.size.maxLoops) !== null && _c !== void 0 ? _c : 0) > 0 && ((_d = particle.size.loops) !== null && _d !== void 0 ? _d : 0) > ((_e = particle.size.maxLoops) !== null && _e !== void 0 ? _e : 0)) {\n    return;\n  }\n\n  switch (particle.size.status) {\n    case 0:\n      if (particle.size.value >= maxValue) {\n        particle.size.status = 1;\n\n        if (!particle.size.loops) {\n          particle.size.loops = 0;\n        }\n\n        particle.size.loops++;\n      } else {\n        particle.size.value += sizeVelocity;\n      }\n\n      break;\n\n    case 1:\n      if (particle.size.value <= minValue) {\n        particle.size.status = 0;\n\n        if (!particle.size.loops) {\n          particle.size.loops = 0;\n        }\n\n        particle.size.loops++;\n      } else {\n        particle.size.value -= sizeVelocity;\n      }\n\n  }\n\n  if (particle.size.velocity && decay !== 1) {\n    particle.size.velocity *= decay;\n  }\n\n  checkDestroy(particle, particle.size.value, minValue, maxValue);\n\n  if (!particle.destroyed) {\n    particle.size.value = clamp(particle.size.value, minValue, maxValue);\n  }\n}\n\nexport class SizeUpdater {\n  init(particle) {\n    var _a;\n\n    const container = particle.container,\n          sizeOptions = particle.options.size,\n          sizeAnimation = sizeOptions.animation;\n\n    if (sizeAnimation.enable) {\n      particle.size.velocity = ((_a = particle.retina.sizeAnimationSpeed) !== null && _a !== void 0 ? _a : container.retina.sizeAnimationSpeed) / 100 * container.retina.reduceFactor;\n\n      if (!sizeAnimation.sync) {\n        particle.size.velocity *= getRandom();\n      }\n    }\n  }\n\n  isEnabled(particle) {\n    var _a, _b, _c, _d;\n\n    return !particle.destroyed && !particle.spawning && particle.size.enable && (((_a = particle.size.maxLoops) !== null && _a !== void 0 ? _a : 0) <= 0 || ((_b = particle.size.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 && ((_c = particle.size.loops) !== null && _c !== void 0 ? _c : 0) < ((_d = particle.size.maxLoops) !== null && _d !== void 0 ? _d : 0));\n  }\n\n  reset(particle) {\n    particle.size.loops = 0;\n  }\n\n  update(particle, delta) {\n    if (!this.isEnabled(particle)) {\n      return;\n    }\n\n    updateSize(particle, delta);\n  }\n\n}","map":{"version":3,"names":["clamp","getRandom","checkDestroy","particle","value","minValue","maxValue","options","size","animation","destroy","updateSize","delta","_a","_b","_c","_d","_e","sizeVelocity","velocity","factor","min","max","decay","destroyed","enable","maxLoops","loops","status","SizeUpdater","init","container","sizeOptions","sizeAnimation","retina","sizeAnimationSpeed","reduceFactor","sync","isEnabled","spawning","reset","update"],"sources":["/Users/ronciszewski/Desktop/Programming/SmartBrain/face-recognition-app/node_modules/tsparticles-updater-size/esm/SizeUpdater.js"],"sourcesContent":["import { clamp, getRandom } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.size.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nfunction updateSize(particle, delta) {\n    var _a, _b, _c, _d, _e;\n    const sizeVelocity = ((_a = particle.size.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor, minValue = particle.size.min, maxValue = particle.size.max, decay = (_b = particle.size.decay) !== null && _b !== void 0 ? _b : 1;\n    if (particle.destroyed ||\n        !particle.size.enable ||\n        (((_c = particle.size.maxLoops) !== null && _c !== void 0 ? _c : 0) > 0 && ((_d = particle.size.loops) !== null && _d !== void 0 ? _d : 0) > ((_e = particle.size.maxLoops) !== null && _e !== void 0 ? _e : 0))) {\n        return;\n    }\n    switch (particle.size.status) {\n        case 0:\n            if (particle.size.value >= maxValue) {\n                particle.size.status = 1;\n                if (!particle.size.loops) {\n                    particle.size.loops = 0;\n                }\n                particle.size.loops++;\n            }\n            else {\n                particle.size.value += sizeVelocity;\n            }\n            break;\n        case 1:\n            if (particle.size.value <= minValue) {\n                particle.size.status = 0;\n                if (!particle.size.loops) {\n                    particle.size.loops = 0;\n                }\n                particle.size.loops++;\n            }\n            else {\n                particle.size.value -= sizeVelocity;\n            }\n    }\n    if (particle.size.velocity && decay !== 1) {\n        particle.size.velocity *= decay;\n    }\n    checkDestroy(particle, particle.size.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        particle.size.value = clamp(particle.size.value, minValue, maxValue);\n    }\n}\nexport class SizeUpdater {\n    init(particle) {\n        var _a;\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                (((_a = particle.retina.sizeAnimationSpeed) !== null && _a !== void 0 ? _a : container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c, _d;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            (((_a = particle.size.maxLoops) !== null && _a !== void 0 ? _a : 0) <= 0 ||\n                (((_b = particle.size.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 && ((_c = particle.size.loops) !== null && _c !== void 0 ? _c : 0) < ((_d = particle.size.maxLoops) !== null && _d !== void 0 ? _d : 0))));\n    }\n    reset(particle) {\n        particle.size.loops = 0;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateSize(particle, delta);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}