{"ast":null,"code":"import { Absorber } from \"./Options/Classes/Absorber\";\nimport { Absorbers } from \"./Absorbers\";\nimport { isInArray } from \"tsparticles-engine\";\n\nclass AbsorbersPlugin {\n  constructor() {\n    this.id = \"absorbers\";\n  }\n\n  getPlugin(container) {\n    return new Absorbers(container);\n  }\n\n  needsPlugin(options) {\n    var _a, _b, _c;\n\n    if (!options) {\n      return false;\n    }\n\n    const absorbers = options.absorbers;\n\n    if (absorbers instanceof Array) {\n      return !!absorbers.length;\n    } else if (absorbers) {\n      return true;\n    } else if (((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) && isInArray(\"absorber\", options.interactivity.events.onClick.mode)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  loadOptions(options, source) {\n    var _a, _b;\n\n    if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n      return;\n    }\n\n    const optionsCast = options;\n\n    if (source === null || source === void 0 ? void 0 : source.absorbers) {\n      if ((source === null || source === void 0 ? void 0 : source.absorbers) instanceof Array) {\n        optionsCast.absorbers = source === null || source === void 0 ? void 0 : source.absorbers.map(s => {\n          const tmp = new Absorber();\n          tmp.load(s);\n          return tmp;\n        });\n      } else {\n        let absorberOptions = optionsCast.absorbers;\n\n        if ((absorberOptions === null || absorberOptions === void 0 ? void 0 : absorberOptions.load) === undefined) {\n          optionsCast.absorbers = absorberOptions = new Absorber();\n        }\n\n        absorberOptions.load(source === null || source === void 0 ? void 0 : source.absorbers);\n      }\n    }\n\n    const interactivityAbsorbers = (_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n\n    if (interactivityAbsorbers) {\n      if (interactivityAbsorbers instanceof Array) {\n        optionsCast.interactivity.modes.absorbers = interactivityAbsorbers.map(s => {\n          const tmp = new Absorber();\n          tmp.load(s);\n          return tmp;\n        });\n      } else {\n        let absorberOptions = optionsCast.interactivity.modes.absorbers;\n\n        if ((absorberOptions === null || absorberOptions === void 0 ? void 0 : absorberOptions.load) === undefined) {\n          optionsCast.interactivity.modes.absorbers = absorberOptions = new Absorber();\n        }\n\n        absorberOptions.load(interactivityAbsorbers);\n      }\n    }\n  }\n\n}\n\nexport async function loadAbsorbersPlugin(engine) {\n  const plugin = new AbsorbersPlugin();\n  await engine.addPlugin(plugin);\n}\nexport * from \"./AbsorberContainer\";\nexport * from \"./Enums/AbsorberClickMode\";\nexport * from \"./Options/Interfaces/IAbsorberOptions\";","map":{"version":3,"names":["Absorber","Absorbers","isInArray","AbsorbersPlugin","constructor","id","getPlugin","container","needsPlugin","options","_a","_b","_c","absorbers","Array","length","interactivity","events","onClick","mode","loadOptions","source","optionsCast","map","s","tmp","load","absorberOptions","undefined","interactivityAbsorbers","modes","loadAbsorbersPlugin","engine","plugin","addPlugin"],"sources":["/Users/ronciszewski/Desktop/Programming/SmartBrain/face-recognition-app/node_modules/tsparticles-plugin-absorbers/esm/index.js"],"sourcesContent":["import { Absorber } from \"./Options/Classes/Absorber\";\nimport { Absorbers } from \"./Absorbers\";\nimport { isInArray } from \"tsparticles-engine\";\nclass AbsorbersPlugin {\n    constructor() {\n        this.id = \"absorbers\";\n    }\n    getPlugin(container) {\n        return new Absorbers(container);\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        if (!options) {\n            return false;\n        }\n        const absorbers = options.absorbers;\n        if (absorbers instanceof Array) {\n            return !!absorbers.length;\n        }\n        else if (absorbers) {\n            return true;\n        }\n        else if (((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) &&\n            isInArray(\"absorber\", options.interactivity.events.onClick.mode)) {\n            return true;\n        }\n        return false;\n    }\n    loadOptions(options, source) {\n        var _a, _b;\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        const optionsCast = options;\n        if (source === null || source === void 0 ? void 0 : source.absorbers) {\n            if ((source === null || source === void 0 ? void 0 : source.absorbers) instanceof Array) {\n                optionsCast.absorbers = source === null || source === void 0 ? void 0 : source.absorbers.map((s) => {\n                    const tmp = new Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                let absorberOptions = optionsCast.absorbers;\n                if ((absorberOptions === null || absorberOptions === void 0 ? void 0 : absorberOptions.load) === undefined) {\n                    optionsCast.absorbers = absorberOptions = new Absorber();\n                }\n                absorberOptions.load(source === null || source === void 0 ? void 0 : source.absorbers);\n            }\n        }\n        const interactivityAbsorbers = (_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n        if (interactivityAbsorbers) {\n            if (interactivityAbsorbers instanceof Array) {\n                optionsCast.interactivity.modes.absorbers = interactivityAbsorbers.map((s) => {\n                    const tmp = new Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                let absorberOptions = optionsCast.interactivity.modes.absorbers;\n                if ((absorberOptions === null || absorberOptions === void 0 ? void 0 : absorberOptions.load) === undefined) {\n                    optionsCast.interactivity.modes.absorbers = absorberOptions = new Absorber();\n                }\n                absorberOptions.load(interactivityAbsorbers);\n            }\n        }\n    }\n}\nexport async function loadAbsorbersPlugin(engine) {\n    const plugin = new AbsorbersPlugin();\n    await engine.addPlugin(plugin);\n}\nexport * from \"./AbsorberContainer\";\nexport * from \"./Enums/AbsorberClickMode\";\nexport * from \"./Options/Interfaces/IAbsorberOptions\";\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}