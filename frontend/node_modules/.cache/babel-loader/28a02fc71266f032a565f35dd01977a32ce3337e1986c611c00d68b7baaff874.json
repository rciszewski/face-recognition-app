{"ast":null,"code":"import { getRandom, getRangeValue } from \"tsparticles-engine\";\nimport { Rotate } from \"./Options/Classes/Rotate\";\n\nfunction updateAngle(particle, delta) {\n  var _a, _b;\n\n  const rotate = particle.rotate,\n        rotateOptions = particle.options.rotate;\n\n  if (!rotate || !rotateOptions) {\n    return;\n  }\n\n  const rotateAnimation = rotateOptions.animation,\n        speed = ((_a = rotate.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor,\n        max = 2 * Math.PI,\n        decay = (_b = rotate.decay) !== null && _b !== void 0 ? _b : 1;\n\n  if (!rotateAnimation.enable) {\n    return;\n  }\n\n  switch (rotate.status) {\n    case 0:\n      rotate.value += speed;\n\n      if (rotate.value > max) {\n        rotate.value -= max;\n      }\n\n      break;\n\n    case 1:\n    default:\n      rotate.value -= speed;\n\n      if (rotate.value < 0) {\n        rotate.value += max;\n      }\n\n      break;\n  }\n\n  if (rotate.velocity && decay !== 1) {\n    rotate.velocity *= decay;\n  }\n}\n\nexport class RotateUpdater {\n  constructor(container) {\n    this.container = container;\n  }\n\n  init(particle) {\n    const rotateOptions = particle.options.rotate;\n\n    if (!rotateOptions) {\n      return;\n    }\n\n    particle.rotate = {\n      enable: rotateOptions.animation.enable,\n      value: getRangeValue(rotateOptions.value) * Math.PI / 180\n    };\n    particle.pathRotation = rotateOptions.path;\n    let rotateDirection = rotateOptions.direction;\n\n    if (rotateDirection === \"random\") {\n      const index = Math.floor(getRandom() * 2);\n      rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n    }\n\n    switch (rotateDirection) {\n      case \"counter-clockwise\":\n      case \"counterClockwise\":\n        particle.rotate.status = 1;\n        break;\n\n      case \"clockwise\":\n        particle.rotate.status = 0;\n        break;\n    }\n\n    const rotateAnimation = rotateOptions.animation;\n\n    if (rotateAnimation.enable) {\n      particle.rotate.decay = 1 - getRangeValue(rotateAnimation.decay);\n      particle.rotate.velocity = getRangeValue(rotateAnimation.speed) / 360 * this.container.retina.reduceFactor;\n\n      if (!rotateAnimation.sync) {\n        particle.rotate.velocity *= getRandom();\n      }\n    }\n\n    particle.rotation = particle.rotate.value;\n  }\n\n  isEnabled(particle) {\n    const rotate = particle.options.rotate;\n\n    if (!rotate) {\n      return false;\n    }\n\n    return !particle.destroyed && !particle.spawning && rotate.animation.enable && !rotate.path;\n  }\n\n  loadOptions(options) {\n    if (!options.rotate) {\n      options.rotate = new Rotate();\n    }\n\n    for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      sources[_key - 1] = arguments[_key];\n    }\n\n    for (const source of sources) {\n      options.rotate.load(source === null || source === void 0 ? void 0 : source.rotate);\n    }\n  }\n\n  update(particle, delta) {\n    var _a, _b;\n\n    if (!this.isEnabled(particle)) {\n      return;\n    }\n\n    updateAngle(particle, delta);\n    particle.rotation = (_b = (_a = particle.rotate) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 0;\n  }\n\n}","map":{"version":3,"names":["getRandom","getRangeValue","Rotate","updateAngle","particle","delta","_a","_b","rotate","rotateOptions","options","rotateAnimation","animation","speed","velocity","factor","max","Math","PI","decay","enable","status","value","RotateUpdater","constructor","container","init","pathRotation","path","rotateDirection","direction","index","floor","retina","reduceFactor","sync","rotation","isEnabled","destroyed","spawning","loadOptions","sources","source","load","update"],"sources":["/Users/ronciszewski/Desktop/Programming/SmartBrain/face-recognition-app/frontend/node_modules/tsparticles-updater-angle/esm/RotateUpdater.js"],"sourcesContent":["import { getRandom, getRangeValue } from \"tsparticles-engine\";\nimport { Rotate } from \"./Options/Classes/Rotate\";\nfunction updateAngle(particle, delta) {\n    var _a, _b;\n    const rotate = particle.rotate, rotateOptions = particle.options.rotate;\n    if (!rotate || !rotateOptions) {\n        return;\n    }\n    const rotateAnimation = rotateOptions.animation, speed = ((_a = rotate.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor, max = 2 * Math.PI, decay = (_b = rotate.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!rotateAnimation.enable) {\n        return;\n    }\n    switch (rotate.status) {\n        case 0:\n            rotate.value += speed;\n            if (rotate.value > max) {\n                rotate.value -= max;\n            }\n            break;\n        case 1:\n        default:\n            rotate.value -= speed;\n            if (rotate.value < 0) {\n                rotate.value += max;\n            }\n            break;\n    }\n    if (rotate.velocity && decay !== 1) {\n        rotate.velocity *= decay;\n    }\n}\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: (getRangeValue(rotateOptions.value) * Math.PI) / 180,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (rotateDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.rotate.status = 1;\n                break;\n            case \"clockwise\":\n                particle.rotate.status = 0;\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = 1 - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && rotate.animation.enable && !rotate.path;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source === null || source === void 0 ? void 0 : source.rotate);\n        }\n    }\n    update(particle, delta) {\n        var _a, _b;\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateAngle(particle, delta);\n        particle.rotation = (_b = (_a = particle.rotate) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 0;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}