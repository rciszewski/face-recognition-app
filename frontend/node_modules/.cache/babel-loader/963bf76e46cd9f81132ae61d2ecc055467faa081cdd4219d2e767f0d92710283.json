{"ast":null,"code":"import { Circle, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, getEasing, isDivModeEnabled, isInArray, mouseMoveEvent } from \"tsparticles-engine\";\nimport { Repulse } from \"./Options/Classes/Repulse\";\nexport class Repulser extends ExternalInteractorBase {\n  constructor(engine, container) {\n    super(container);\n    this._engine = engine;\n\n    if (!container.repulse) {\n      container.repulse = {\n        particles: []\n      };\n    }\n\n    this.handleClickMode = mode => {\n      const options = this.container.actualOptions,\n            repulse = options.interactivity.modes.repulse;\n\n      if (!repulse || mode !== \"repulse\") {\n        return;\n      }\n\n      if (!container.repulse) {\n        container.repulse = {\n          particles: []\n        };\n      }\n\n      container.repulse.clicking = true;\n      container.repulse.count = 0;\n\n      for (const particle of container.repulse.particles) {\n        if (!this.isEnabled(particle)) {\n          continue;\n        }\n\n        particle.velocity.setTo(particle.initialVelocity);\n      }\n\n      container.repulse.particles = [];\n      container.repulse.finish = false;\n      setTimeout(() => {\n        if (!container.destroyed) {\n          if (!container.repulse) {\n            container.repulse = {\n              particles: []\n            };\n          }\n\n          container.repulse.clicking = false;\n        }\n      }, repulse.duration * 1000);\n    };\n  }\n\n  clear() {}\n\n  init() {\n    const container = this.container,\n          repulse = container.actualOptions.interactivity.modes.repulse;\n\n    if (!repulse) {\n      return;\n    }\n\n    container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n  }\n\n  async interact() {\n    const container = this.container,\n          options = container.actualOptions,\n          mouseMoveStatus = container.interactivity.status === mouseMoveEvent,\n          events = options.interactivity.events,\n          hoverEnabled = events.onHover.enable,\n          hoverMode = events.onHover.mode,\n          clickEnabled = events.onClick.enable,\n          clickMode = events.onClick.mode,\n          divs = events.onDiv;\n\n    if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n      this.hoverRepulse();\n    } else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n      this.clickRepulse();\n    } else {\n      divModeExecute(\"repulse\", divs, (selector, div) => this.singleSelectorRepulse(selector, div));\n    }\n  }\n\n  isEnabled(particle) {\n    var _a;\n\n    const container = this.container,\n          options = container.actualOptions,\n          mouse = container.interactivity.mouse,\n          events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events,\n          divs = events.onDiv,\n          divRepulse = isDivModeEnabled(\"repulse\", divs);\n\n    if (!(divRepulse || events.onHover.enable && mouse.position || events.onClick.enable && mouse.clickPosition)) {\n      return false;\n    }\n\n    const hoverMode = events.onHover.mode,\n          clickMode = events.onClick.mode;\n    return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n  }\n\n  loadModeOptions(options) {\n    if (!options.repulse) {\n      options.repulse = new Repulse();\n    }\n\n    for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      sources[_key - 1] = arguments[_key];\n    }\n\n    for (const source of sources) {\n      options.repulse.load(source === null || source === void 0 ? void 0 : source.repulse);\n    }\n  }\n\n  reset() {}\n\n  clickRepulse() {\n    const container = this.container,\n          repulse = container.actualOptions.interactivity.modes.repulse;\n\n    if (!repulse) {\n      return;\n    }\n\n    if (!container.repulse) {\n      container.repulse = {\n        particles: []\n      };\n    }\n\n    if (!container.repulse.finish) {\n      if (!container.repulse.count) {\n        container.repulse.count = 0;\n      }\n\n      container.repulse.count++;\n\n      if (container.repulse.count === container.particles.count) {\n        container.repulse.finish = true;\n      }\n    }\n\n    if (container.repulse.clicking) {\n      const repulseDistance = container.retina.repulseModeDistance;\n\n      if (!repulseDistance || repulseDistance < 0) {\n        return;\n      }\n\n      const repulseRadius = Math.pow(repulseDistance / 6, 3),\n            mouseClickPos = container.interactivity.mouse.clickPosition;\n\n      if (mouseClickPos === undefined) {\n        return;\n      }\n\n      const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius),\n            query = container.particles.quadTree.query(range, p => this.isEnabled(p));\n\n      for (const particle of query) {\n        const {\n          dx,\n          dy,\n          distance\n        } = getDistances(mouseClickPos, particle.position),\n              d = distance ** 2,\n              velocity = repulse.speed,\n              force = -repulseRadius * velocity / d;\n\n        if (d <= repulseRadius) {\n          container.repulse.particles.push(particle);\n          const vect = Vector.create(dx, dy);\n          vect.length = force;\n          particle.velocity.setTo(vect);\n        }\n      }\n    } else if (container.repulse.clicking === false) {\n      for (const particle of container.repulse.particles) {\n        particle.velocity.setTo(particle.initialVelocity);\n      }\n\n      container.repulse.particles = [];\n    }\n  }\n\n  hoverRepulse() {\n    const container = this.container,\n          mousePos = container.interactivity.mouse.position,\n          repulseRadius = container.retina.repulseModeDistance;\n\n    if (!repulseRadius || repulseRadius < 0 || !mousePos) {\n      return;\n    }\n\n    this.processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n  }\n\n  processRepulse(position, repulseRadius, area, divRepulse) {\n    var _a;\n\n    const container = this.container,\n          query = container.particles.quadTree.query(area, p => this.isEnabled(p)),\n          repulseOptions = container.actualOptions.interactivity.modes.repulse;\n\n    if (!repulseOptions) {\n      return;\n    }\n\n    for (const particle of query) {\n      const {\n        dx,\n        dy,\n        distance\n      } = getDistances(particle.position, position),\n            velocity = ((_a = divRepulse === null || divRepulse === void 0 ? void 0 : divRepulse.speed) !== null && _a !== void 0 ? _a : repulseOptions.speed) * repulseOptions.factor,\n            repulseFactor = clamp(getEasing(repulseOptions.easing)(1 - distance / repulseRadius) * velocity, 0, repulseOptions.maxSpeed),\n            normVec = Vector.create(distance === 0 ? velocity : dx / distance * repulseFactor, distance === 0 ? velocity : dy / distance * repulseFactor);\n      particle.position.addTo(normVec);\n    }\n  }\n\n  singleSelectorRepulse(selector, div) {\n    const container = this.container,\n          repulse = container.actualOptions.interactivity.modes.repulse;\n\n    if (!repulse) {\n      return;\n    }\n\n    const query = document.querySelectorAll(selector);\n\n    if (!query.length) {\n      return;\n    }\n\n    query.forEach(item => {\n      const elem = item,\n            pxRatio = container.retina.pixelRatio,\n            pos = {\n        x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n        y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio\n      },\n            repulseRadius = elem.offsetWidth / 2 * pxRatio,\n            area = div.type === \"circle\" ? new Circle(pos.x, pos.y, repulseRadius) : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio),\n            divs = repulse.divs,\n            divRepulse = divMode(divs, elem);\n      this.processRepulse(pos, repulseRadius, area, divRepulse);\n    });\n  }\n\n}","map":{"version":3,"names":["Circle","ExternalInteractorBase","Rectangle","Vector","clamp","divMode","divModeExecute","getDistances","getEasing","isDivModeEnabled","isInArray","mouseMoveEvent","Repulse","Repulser","constructor","engine","container","_engine","repulse","particles","handleClickMode","mode","options","actualOptions","interactivity","modes","clicking","count","particle","isEnabled","velocity","setTo","initialVelocity","finish","setTimeout","destroyed","duration","clear","init","retina","repulseModeDistance","distance","pixelRatio","interact","mouseMoveStatus","status","events","hoverEnabled","onHover","enable","hoverMode","clickEnabled","onClick","clickMode","divs","onDiv","hoverRepulse","clickRepulse","selector","div","singleSelectorRepulse","_a","mouse","divRepulse","position","clickPosition","loadModeOptions","sources","source","load","reset","repulseDistance","repulseRadius","Math","pow","mouseClickPos","undefined","range","x","y","query","quadTree","p","dx","dy","d","speed","force","push","vect","create","length","mousePos","processRepulse","area","repulseOptions","factor","repulseFactor","easing","maxSpeed","normVec","addTo","document","querySelectorAll","forEach","item","elem","pxRatio","pos","offsetLeft","offsetWidth","offsetTop","offsetHeight","type"],"sources":["/Users/ronciszewski/Desktop/Programming/SmartBrain/face-recognition-app/node_modules/tsparticles-interaction-external-repulse/esm/Repulser.js"],"sourcesContent":["import { Circle, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, getEasing, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Repulse } from \"./Options/Classes/Repulse\";\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulse = options.interactivity.modes.repulse;\n            if (!repulse || mode !== \"repulse\") {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            container.repulse.clicking = true;\n            container.repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.repulse.particles = [];\n            container.repulse.finish = false;\n            setTimeout(() => {\n                if (!container.destroyed) {\n                    if (!container.repulse) {\n                        container.repulse = { particles: [] };\n                    }\n                    container.repulse.clicking = false;\n                }\n            }, repulse.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n            this.hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n            this.clickRepulse();\n        }\n        else {\n            divModeExecute(\"repulse\", divs, (selector, div) => this.singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events, divs = events.onDiv, divRepulse = isDivModeEnabled(\"repulse\", divs);\n        if (!(divRepulse || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source === null || source === void 0 ? void 0 : source.repulse);\n        }\n    }\n    reset() {\n    }\n    clickRepulse() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        if (!container.repulse.finish) {\n            if (!container.repulse.count) {\n                container.repulse.count = 0;\n            }\n            container.repulse.count++;\n            if (container.repulse.count === container.particles.count) {\n                container.repulse.finish = true;\n            }\n        }\n        if (container.repulse.clicking) {\n            const repulseDistance = container.retina.repulseModeDistance;\n            if (!repulseDistance || repulseDistance < 0) {\n                return;\n            }\n            const repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;\n            if (mouseClickPos === undefined) {\n                return;\n            }\n            const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** 2, velocity = repulse.speed, force = (-repulseRadius * velocity) / d;\n                if (d <= repulseRadius) {\n                    container.repulse.particles.push(particle);\n                    const vect = Vector.create(dx, dy);\n                    vect.length = force;\n                    particle.velocity.setTo(vect);\n                }\n            }\n        }\n        else if (container.repulse.clicking === false) {\n            for (const particle of container.repulse.particles) {\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.repulse.particles = [];\n        }\n    }\n    hoverRepulse() {\n        const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n        if (!repulseRadius || repulseRadius < 0 || !mousePos) {\n            return;\n        }\n        this.processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n    }\n    processRepulse(position, repulseRadius, area, divRepulse) {\n        var _a;\n        const container = this.container, query = container.particles.quadTree.query(area, (p) => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n        if (!repulseOptions) {\n            return;\n        }\n        for (const particle of query) {\n            const { dx, dy, distance } = getDistances(particle.position, position), velocity = ((_a = divRepulse === null || divRepulse === void 0 ? void 0 : divRepulse.speed) !== null && _a !== void 0 ? _a : repulseOptions.speed) * repulseOptions.factor, repulseFactor = clamp(getEasing(repulseOptions.easing)(1 - distance / repulseRadius) * velocity, 0, repulseOptions.maxSpeed), normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * repulseFactor, distance === 0 ? velocity : (dy / distance) * repulseFactor);\n            particle.position.addTo(normVec);\n        }\n    }\n    singleSelectorRepulse(selector, div) {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        const query = document.querySelectorAll(selector);\n        if (!query.length) {\n            return;\n        }\n        query.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, repulseRadius)\n                : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n            this.processRepulse(pos, repulseRadius, area, divRepulse);\n        });\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}