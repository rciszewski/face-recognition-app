{"ast":null,"code":"import { getHslAnimationFromHsl, itemFromSingleOrMultiple, randomInRange, rangeColorToHsl } from \"tsparticles-engine\";\n\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\n  var _a, _b;\n\n  const colorValue = value;\n\n  if (!colorValue || !colorValue.enable) {\n    return;\n  }\n\n  const offset = randomInRange(valueAnimation.offset),\n        velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6,\n        decay = (_b = value.decay) !== null && _b !== void 0 ? _b : 1;\n\n  if (!decrease || colorValue.status === 0) {\n    colorValue.value += velocity;\n\n    if (decrease && colorValue.value > max) {\n      colorValue.status = 1;\n      colorValue.value -= colorValue.value % max;\n    }\n  } else {\n    colorValue.value -= velocity;\n\n    if (colorValue.value < 0) {\n      colorValue.status = 0;\n      colorValue.value += colorValue.value;\n    }\n  }\n\n  if (colorValue.velocity && decay !== 1) {\n    colorValue.velocity *= decay;\n  }\n\n  if (colorValue.value > max) {\n    colorValue.value %= max;\n  }\n}\n\nfunction updateStrokeColor(particle, delta) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n\n  if (!((_a = particle.stroke) === null || _a === void 0 ? void 0 : _a.color)) {\n    return;\n  }\n\n  const animationOptions = particle.stroke.color.animation,\n        h = (_c = (_b = particle.strokeColor) === null || _b === void 0 ? void 0 : _b.h) !== null && _c !== void 0 ? _c : (_d = particle.color) === null || _d === void 0 ? void 0 : _d.h;\n\n  if (h) {\n    updateColorValue(delta, h, animationOptions.h, 360, false);\n  }\n\n  const s = (_f = (_e = particle.strokeColor) === null || _e === void 0 ? void 0 : _e.s) !== null && _f !== void 0 ? _f : (_g = particle.color) === null || _g === void 0 ? void 0 : _g.s;\n\n  if (s) {\n    updateColorValue(delta, s, animationOptions.s, 100, true);\n  }\n\n  const l = (_j = (_h = particle.strokeColor) === null || _h === void 0 ? void 0 : _h.l) !== null && _j !== void 0 ? _j : (_k = particle.color) === null || _k === void 0 ? void 0 : _k.l;\n\n  if (l) {\n    updateColorValue(delta, l, animationOptions.l, 100, true);\n  }\n}\n\nexport class StrokeColorUpdater {\n  constructor(container) {\n    this.container = container;\n  }\n\n  init(particle) {\n    var _a, _b;\n\n    const container = this.container;\n    particle.stroke = itemFromSingleOrMultiple(particle.options.stroke, particle.id, particle.options.reduceDuplicates);\n    particle.strokeWidth = particle.stroke.width * container.retina.pixelRatio;\n    const strokeHslColor = (_a = rangeColorToHsl(particle.stroke.color)) !== null && _a !== void 0 ? _a : particle.getFillColor();\n\n    if (strokeHslColor) {\n      particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, (_b = particle.stroke.color) === null || _b === void 0 ? void 0 : _b.animation, container.retina.reduceFactor);\n    }\n  }\n\n  isEnabled(particle) {\n    var _a, _b, _c, _d;\n\n    const color = (_a = particle.stroke) === null || _a === void 0 ? void 0 : _a.color;\n    return !particle.destroyed && !particle.spawning && !!color && (((_b = particle.strokeColor) === null || _b === void 0 ? void 0 : _b.h.value) !== undefined && color.animation.h.enable || ((_c = particle.strokeColor) === null || _c === void 0 ? void 0 : _c.s.value) !== undefined && color.animation.s.enable || ((_d = particle.strokeColor) === null || _d === void 0 ? void 0 : _d.l.value) !== undefined && color.animation.l.enable);\n  }\n\n  update(particle, delta) {\n    if (!this.isEnabled(particle)) {\n      return;\n    }\n\n    updateStrokeColor(particle, delta);\n  }\n\n}","map":{"version":3,"names":["getHslAnimationFromHsl","itemFromSingleOrMultiple","randomInRange","rangeColorToHsl","updateColorValue","delta","value","valueAnimation","max","decrease","_a","_b","colorValue","enable","offset","velocity","factor","decay","status","updateStrokeColor","particle","_c","_d","_e","_f","_g","_h","_j","_k","stroke","color","animationOptions","animation","h","strokeColor","s","l","StrokeColorUpdater","constructor","container","init","options","id","reduceDuplicates","strokeWidth","width","retina","pixelRatio","strokeHslColor","getFillColor","reduceFactor","isEnabled","destroyed","spawning","undefined","update"],"sources":["/Users/ronciszewski/Desktop/Programming/SmartBrain/face-recognition-app/frontend/node_modules/tsparticles-updater-stroke-color/esm/StrokeColorUpdater.js"],"sourcesContent":["import { getHslAnimationFromHsl, itemFromSingleOrMultiple, randomInRange, rangeColorToHsl, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\n    var _a, _b;\n    const colorValue = value;\n    if (!colorValue || !colorValue.enable) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6, decay = (_b = value.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!decrease || colorValue.status === 0) {\n        colorValue.value += velocity;\n        if (decrease && colorValue.value > max) {\n            colorValue.status = 1;\n            colorValue.value -= colorValue.value % max;\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            colorValue.status = 0;\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nfunction updateStrokeColor(particle, delta) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n    if (!((_a = particle.stroke) === null || _a === void 0 ? void 0 : _a.color)) {\n        return;\n    }\n    const animationOptions = particle.stroke.color.animation, h = (_c = (_b = particle.strokeColor) === null || _b === void 0 ? void 0 : _b.h) !== null && _c !== void 0 ? _c : (_d = particle.color) === null || _d === void 0 ? void 0 : _d.h;\n    if (h) {\n        updateColorValue(delta, h, animationOptions.h, 360, false);\n    }\n    const s = (_f = (_e = particle.strokeColor) === null || _e === void 0 ? void 0 : _e.s) !== null && _f !== void 0 ? _f : (_g = particle.color) === null || _g === void 0 ? void 0 : _g.s;\n    if (s) {\n        updateColorValue(delta, s, animationOptions.s, 100, true);\n    }\n    const l = (_j = (_h = particle.strokeColor) === null || _h === void 0 ? void 0 : _h.l) !== null && _j !== void 0 ? _j : (_k = particle.color) === null || _k === void 0 ? void 0 : _k.l;\n    if (l) {\n        updateColorValue(delta, l, animationOptions.l, 100, true);\n    }\n}\nexport class StrokeColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        var _a, _b;\n        const container = this.container;\n        particle.stroke = itemFromSingleOrMultiple(particle.options.stroke, particle.id, particle.options.reduceDuplicates);\n        particle.strokeWidth = particle.stroke.width * container.retina.pixelRatio;\n        const strokeHslColor = (_a = rangeColorToHsl(particle.stroke.color)) !== null && _a !== void 0 ? _a : particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, (_b = particle.stroke.color) === null || _b === void 0 ? void 0 : _b.animation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c, _d;\n        const color = (_a = particle.stroke) === null || _a === void 0 ? void 0 : _a.color;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((((_b = particle.strokeColor) === null || _b === void 0 ? void 0 : _b.h.value) !== undefined && color.animation.h.enable) ||\n                (((_c = particle.strokeColor) === null || _c === void 0 ? void 0 : _c.s.value) !== undefined && color.animation.s.enable) ||\n                (((_d = particle.strokeColor) === null || _d === void 0 ? void 0 : _d.l.value) !== undefined && color.animation.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateStrokeColor(particle, delta);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}