{"ast":null,"code":"import { clamp } from \"tsparticles-engine\";\nexport function absorb(p1, p2, fps, pixelRatio) {\n  if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n    p1.destroy();\n  } else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n    p2.destroy();\n  } else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n    if (p1.getRadius() >= p2.getRadius()) {\n      const factor = clamp(p1.getRadius() / p2.getRadius(), 0, p2.getRadius()) * fps;\n      p1.size.value += factor;\n      p2.size.value -= factor;\n\n      if (p2.getRadius() <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n      }\n    } else {\n      const factor = clamp(p2.getRadius() / p1.getRadius(), 0, p1.getRadius()) * fps;\n      p1.size.value -= factor;\n      p2.size.value += factor;\n\n      if (p1.getRadius() <= pixelRatio) {\n        p1.size.value = 0;\n        p1.destroy();\n      }\n    }\n  }\n}","map":{"version":3,"names":["clamp","absorb","p1","p2","fps","pixelRatio","getRadius","undefined","destroy","factor","size","value"],"sources":["/Users/ronciszewski/Desktop/Programming/SmartBrain/face-recognition-app/node_modules/tsparticles-interaction-particles-collisions/esm/Absorb.js"],"sourcesContent":["import { clamp } from \"tsparticles-engine\";\nexport function absorb(p1, p2, fps, pixelRatio) {\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        if (p1.getRadius() >= p2.getRadius()) {\n            const factor = clamp(p1.getRadius() / p2.getRadius(), 0, p2.getRadius()) * fps;\n            p1.size.value += factor;\n            p2.size.value -= factor;\n            if (p2.getRadius() <= pixelRatio) {\n                p2.size.value = 0;\n                p2.destroy();\n            }\n        }\n        else {\n            const factor = clamp(p2.getRadius() / p1.getRadius(), 0, p1.getRadius()) * fps;\n            p1.size.value -= factor;\n            p2.size.value += factor;\n            if (p1.getRadius() <= pixelRatio) {\n                p1.size.value = 0;\n                p1.destroy();\n            }\n        }\n    }\n}\n"],"mappings":"AAAA,SAASA,KAAT,QAAsB,oBAAtB;AACA,OAAO,SAASC,MAAT,CAAgBC,EAAhB,EAAoBC,EAApB,EAAwBC,GAAxB,EAA6BC,UAA7B,EAAyC;EAC5C,IAAIH,EAAE,CAACI,SAAH,OAAmBC,SAAnB,IAAgCJ,EAAE,CAACG,SAAH,OAAmBC,SAAvD,EAAkE;IAC9DL,EAAE,CAACM,OAAH;EACH,CAFD,MAGK,IAAIN,EAAE,CAACI,SAAH,OAAmBC,SAAnB,IAAgCJ,EAAE,CAACG,SAAH,OAAmBC,SAAvD,EAAkE;IACnEJ,EAAE,CAACK,OAAH;EACH,CAFI,MAGA,IAAIN,EAAE,CAACI,SAAH,OAAmBC,SAAnB,IAAgCJ,EAAE,CAACG,SAAH,OAAmBC,SAAvD,EAAkE;IACnE,IAAIL,EAAE,CAACI,SAAH,MAAkBH,EAAE,CAACG,SAAH,EAAtB,EAAsC;MAClC,MAAMG,MAAM,GAAGT,KAAK,CAACE,EAAE,CAACI,SAAH,KAAiBH,EAAE,CAACG,SAAH,EAAlB,EAAkC,CAAlC,EAAqCH,EAAE,CAACG,SAAH,EAArC,CAAL,GAA4DF,GAA3E;MACAF,EAAE,CAACQ,IAAH,CAAQC,KAAR,IAAiBF,MAAjB;MACAN,EAAE,CAACO,IAAH,CAAQC,KAAR,IAAiBF,MAAjB;;MACA,IAAIN,EAAE,CAACG,SAAH,MAAkBD,UAAtB,EAAkC;QAC9BF,EAAE,CAACO,IAAH,CAAQC,KAAR,GAAgB,CAAhB;QACAR,EAAE,CAACK,OAAH;MACH;IACJ,CARD,MASK;MACD,MAAMC,MAAM,GAAGT,KAAK,CAACG,EAAE,CAACG,SAAH,KAAiBJ,EAAE,CAACI,SAAH,EAAlB,EAAkC,CAAlC,EAAqCJ,EAAE,CAACI,SAAH,EAArC,CAAL,GAA4DF,GAA3E;MACAF,EAAE,CAACQ,IAAH,CAAQC,KAAR,IAAiBF,MAAjB;MACAN,EAAE,CAACO,IAAH,CAAQC,KAAR,IAAiBF,MAAjB;;MACA,IAAIP,EAAE,CAACI,SAAH,MAAkBD,UAAtB,EAAkC;QAC9BH,EAAE,CAACQ,IAAH,CAAQC,KAAR,GAAgB,CAAhB;QACAT,EAAE,CAACM,OAAH;MACH;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module"}