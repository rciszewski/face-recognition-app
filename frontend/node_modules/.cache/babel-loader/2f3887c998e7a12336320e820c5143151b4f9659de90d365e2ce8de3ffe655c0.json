{"ast":null,"code":"import { Vector, calcPositionOrRandomFromSizeRanged, deepExtend, getRangeValue, isPointInside, itemFromSingleOrMultiple, randomInRange, rangeColorToHsl } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterSize } from \"./Options/Classes/EmitterSize\";\nexport class EmitterInstance {\n  constructor(engine, emitters, container, options, position) {\n    var _a, _b, _c, _d, _e, _f, _g;\n\n    var _h;\n\n    this.emitters = emitters;\n    this.container = container;\n    this._engine = engine;\n    this._currentDuration = 0;\n    this._currentEmitDelay = 0;\n    this._currentSpawnDelay = 0;\n    this._initialPosition = position;\n\n    if (options instanceof Emitter) {\n      this.options = options;\n    } else {\n      this.options = new Emitter();\n      this.options.load(options);\n    }\n\n    this._spawnDelay = ((_a = this.options.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000 / this.container.retina.reduceFactor;\n    this.position = (_b = this._initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n    this.name = this.options.name;\n    this._shape = (_c = this._engine.emitterShapeManager) === null || _c === void 0 ? void 0 : _c.getShape(this.options.shape);\n    this.fill = this.options.fill;\n    this._firstSpawn = !this.options.life.wait;\n    this._startParticlesAdded = false;\n    let particlesOptions = deepExtend({}, this.options.particles);\n    particlesOptions !== null && particlesOptions !== void 0 ? particlesOptions : particlesOptions = {};\n    (_d = particlesOptions.move) !== null && _d !== void 0 ? _d : particlesOptions.move = {};\n    (_e = (_h = particlesOptions.move).direction) !== null && _e !== void 0 ? _e : _h.direction = this.options.direction;\n\n    if (this.options.spawnColor) {\n      this.spawnColor = rangeColorToHsl(this.options.spawnColor);\n    }\n\n    this._paused = !this.options.autoPlay;\n    this._particlesOptions = particlesOptions;\n    this.size = (_f = this.options.size) !== null && _f !== void 0 ? _f : (() => {\n      const size = new EmitterSize();\n      size.load({\n        height: 0,\n        mode: \"percent\",\n        width: 0\n      });\n      return size;\n    })();\n    this._lifeCount = (_g = this.options.life.count) !== null && _g !== void 0 ? _g : -1;\n    this._immortal = this._lifeCount <= 0;\n\n    this._engine.dispatchEvent(\"emitterCreated\", {\n      container,\n      data: {\n        emitter: this\n      }\n    });\n\n    this.play();\n  }\n\n  externalPause() {\n    this._paused = true;\n    this.pause();\n  }\n\n  externalPlay() {\n    this._paused = false;\n    this.play();\n  }\n\n  getPosition() {\n    if (this.options.domId) {\n      const container = this.container,\n            element = document.getElementById(this.options.domId);\n\n      if (element) {\n        const elRect = element.getBoundingClientRect();\n        return {\n          x: (elRect.x + elRect.width / 2) * container.retina.pixelRatio,\n          y: (elRect.y + elRect.height / 2) * container.retina.pixelRatio\n        };\n      }\n    }\n\n    return this.position;\n  }\n\n  getSize() {\n    const container = this.container;\n\n    if (this.options.domId) {\n      const element = document.getElementById(this.options.domId);\n\n      if (element) {\n        const elRect = element.getBoundingClientRect();\n        return {\n          width: elRect.width * container.retina.pixelRatio,\n          height: elRect.height * container.retina.pixelRatio\n        };\n      }\n    }\n\n    return {\n      width: this.size.mode === \"percent\" ? container.canvas.size.width * this.size.width / 100 : this.size.width,\n      height: this.size.mode === \"percent\" ? container.canvas.size.height * this.size.height / 100 : this.size.height\n    };\n  }\n\n  pause() {\n    if (this._paused) {\n      return;\n    }\n\n    delete this._emitDelay;\n  }\n\n  play() {\n    var _a;\n\n    if (this._paused) {\n      return;\n    }\n\n    if (!(this.container.retina.reduceFactor && (this._lifeCount > 0 || this._immortal || !this.options.life.count) && (this._firstSpawn || this._currentSpawnDelay >= ((_a = this._spawnDelay) !== null && _a !== void 0 ? _a : 0)))) {\n      return;\n    }\n\n    if (this._emitDelay === undefined) {\n      const delay = getRangeValue(this.options.rate.delay);\n      this._emitDelay = 1000 * delay / this.container.retina.reduceFactor;\n    }\n\n    if (this._lifeCount > 0 || this._immortal) {\n      this.prepareToDie();\n    }\n  }\n\n  resize() {\n    const initialPosition = this._initialPosition;\n    this.position = initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin) ? initialPosition : this.calcPosition();\n  }\n\n  update(delta) {\n    var _a, _b, _c;\n\n    if (this._paused) {\n      return;\n    }\n\n    if (this._firstSpawn) {\n      this._firstSpawn = false;\n      this._currentSpawnDelay = (_a = this._spawnDelay) !== null && _a !== void 0 ? _a : 0;\n      this._currentEmitDelay = (_b = this._emitDelay) !== null && _b !== void 0 ? _b : 0;\n    }\n\n    if (!this._startParticlesAdded) {\n      this._startParticlesAdded = true;\n      this.emitParticles(this.options.startCount);\n    }\n\n    if (this._duration !== undefined) {\n      this._currentDuration += delta.value;\n\n      if (this._currentDuration >= this._duration) {\n        this.pause();\n\n        if (this._spawnDelay !== undefined) {\n          delete this._spawnDelay;\n        }\n\n        if (!this._immortal) {\n          this._lifeCount--;\n        }\n\n        if (this._lifeCount > 0 || this._immortal) {\n          this.position = this.calcPosition();\n          this._spawnDelay = ((_c = this.options.life.delay) !== null && _c !== void 0 ? _c : 0) * 1000 / this.container.retina.reduceFactor;\n        } else {\n          this.destroy();\n        }\n\n        this._currentDuration -= this._duration;\n        delete this._duration;\n      }\n    }\n\n    if (this._spawnDelay !== undefined) {\n      this._currentSpawnDelay += delta.value;\n\n      if (this._currentSpawnDelay >= this._spawnDelay) {\n        this._engine.dispatchEvent(\"emitterPlay\", {\n          container: this.container\n        });\n\n        this.play();\n        this._currentSpawnDelay -= this._currentSpawnDelay;\n        delete this._spawnDelay;\n      }\n    }\n\n    if (this._emitDelay !== undefined) {\n      this._currentEmitDelay += delta.value;\n\n      if (this._currentEmitDelay >= this._emitDelay) {\n        this.emit();\n        this._currentEmitDelay -= this._emitDelay;\n      }\n    }\n  }\n\n  calcPosition() {\n    return calcPositionOrRandomFromSizeRanged({\n      size: this.container.canvas.size,\n      position: this.options.position\n    });\n  }\n\n  destroy() {\n    this.emitters.removeEmitter(this);\n\n    this._engine.dispatchEvent(\"emitterDestroyed\", {\n      container: this.container,\n      data: {\n        emitter: this\n      }\n    });\n  }\n\n  emit() {\n    if (this._paused) {\n      return;\n    }\n\n    const quantity = getRangeValue(this.options.rate.quantity);\n    this.emitParticles(quantity);\n  }\n\n  emitParticles(quantity) {\n    var _a, _b, _c;\n\n    const position = this.getPosition(),\n          size = this.getSize(),\n          singleParticlesOptions = itemFromSingleOrMultiple(this._particlesOptions);\n\n    for (let i = 0; i < quantity; i++) {\n      const particlesOptions = deepExtend({}, singleParticlesOptions);\n\n      if (this.spawnColor) {\n        const hslAnimation = (_a = this.options.spawnColor) === null || _a === void 0 ? void 0 : _a.animation;\n\n        if (hslAnimation) {\n          this.spawnColor.h = this.setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n          this.spawnColor.s = this.setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n          this.spawnColor.l = this.setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n        }\n\n        if (!particlesOptions.color) {\n          particlesOptions.color = {\n            value: this.spawnColor\n          };\n        } else {\n          particlesOptions.color.value = this.spawnColor;\n        }\n      }\n\n      if (!position) {\n        return;\n      }\n\n      const pPosition = (_c = (_b = this._shape) === null || _b === void 0 ? void 0 : _b.randomPosition(position, size, this.fill)) !== null && _c !== void 0 ? _c : position;\n      this.container.particles.addParticle(pPosition, particlesOptions);\n    }\n  }\n\n  prepareToDie() {\n    var _a;\n\n    if (this._paused) {\n      return;\n    }\n\n    const duration = (_a = this.options.life) === null || _a === void 0 ? void 0 : _a.duration;\n\n    if (this.container.retina.reduceFactor && (this._lifeCount > 0 || this._immortal) && duration !== undefined && duration > 0) {\n      this._duration = duration * 1000;\n    }\n  }\n\n  setColorAnimation(animation, initValue, maxValue) {\n    var _a;\n\n    const container = this.container;\n\n    if (!animation.enable) {\n      return initValue;\n    }\n\n    const colorOffset = randomInRange(animation.offset),\n          delay = getRangeValue(this.options.rate.delay),\n          emitFactor = 1000 * delay / container.retina.reduceFactor,\n          colorSpeed = getRangeValue((_a = animation.speed) !== null && _a !== void 0 ? _a : 0);\n    return (initValue + colorSpeed * container.fpsLimit / emitFactor + colorOffset * 3.6) % maxValue;\n  }\n\n}","map":{"version":3,"names":["Vector","calcPositionOrRandomFromSizeRanged","deepExtend","getRangeValue","isPointInside","itemFromSingleOrMultiple","randomInRange","rangeColorToHsl","Emitter","EmitterSize","EmitterInstance","constructor","engine","emitters","container","options","position","_a","_b","_c","_d","_e","_f","_g","_h","_engine","_currentDuration","_currentEmitDelay","_currentSpawnDelay","_initialPosition","load","_spawnDelay","life","delay","retina","reduceFactor","calcPosition","name","_shape","emitterShapeManager","getShape","shape","fill","_firstSpawn","wait","_startParticlesAdded","particlesOptions","particles","move","direction","spawnColor","_paused","autoPlay","_particlesOptions","size","height","mode","width","_lifeCount","count","_immortal","dispatchEvent","data","emitter","play","externalPause","pause","externalPlay","getPosition","domId","element","document","getElementById","elRect","getBoundingClientRect","x","pixelRatio","y","getSize","canvas","_emitDelay","undefined","rate","prepareToDie","resize","initialPosition","origin","update","delta","emitParticles","startCount","_duration","value","destroy","emit","removeEmitter","quantity","singleParticlesOptions","i","hslAnimation","animation","h","setColorAnimation","s","l","color","pPosition","randomPosition","addParticle","duration","initValue","maxValue","enable","colorOffset","offset","emitFactor","colorSpeed","speed","fpsLimit"],"sources":["/Users/ronciszewski/Desktop/Programming/SmartBrain/face-recognition-app/frontend/node_modules/tsparticles-plugin-emitters/esm/EmitterInstance.js"],"sourcesContent":["import { Vector, calcPositionOrRandomFromSizeRanged, deepExtend, getRangeValue, isPointInside, itemFromSingleOrMultiple, randomInRange, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterSize } from \"./Options/Classes/EmitterSize\";\nexport class EmitterInstance {\n    constructor(engine, emitters, container, options, position) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        var _h;\n        this.emitters = emitters;\n        this.container = container;\n        this._engine = engine;\n        this._currentDuration = 0;\n        this._currentEmitDelay = 0;\n        this._currentSpawnDelay = 0;\n        this._initialPosition = position;\n        if (options instanceof Emitter) {\n            this.options = options;\n        }\n        else {\n            this.options = new Emitter();\n            this.options.load(options);\n        }\n        this._spawnDelay = (((_a = this.options.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000) / this.container.retina.reduceFactor;\n        this.position = (_b = this._initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n        this.name = this.options.name;\n        this._shape = (_c = this._engine.emitterShapeManager) === null || _c === void 0 ? void 0 : _c.getShape(this.options.shape);\n        this.fill = this.options.fill;\n        this._firstSpawn = !this.options.life.wait;\n        this._startParticlesAdded = false;\n        let particlesOptions = deepExtend({}, this.options.particles);\n        particlesOptions !== null && particlesOptions !== void 0 ? particlesOptions : (particlesOptions = {});\n        (_d = particlesOptions.move) !== null && _d !== void 0 ? _d : (particlesOptions.move = {});\n        (_e = (_h = particlesOptions.move).direction) !== null && _e !== void 0 ? _e : (_h.direction = this.options.direction);\n        if (this.options.spawnColor) {\n            this.spawnColor = rangeColorToHsl(this.options.spawnColor);\n        }\n        this._paused = !this.options.autoPlay;\n        this._particlesOptions = particlesOptions;\n        this.size =\n            (_f = this.options.size) !== null && _f !== void 0 ? _f : (() => {\n                const size = new EmitterSize();\n                size.load({\n                    height: 0,\n                    mode: \"percent\",\n                    width: 0,\n                });\n                return size;\n            })();\n        this._lifeCount = (_g = this.options.life.count) !== null && _g !== void 0 ? _g : -1;\n        this._immortal = this._lifeCount <= 0;\n        this._engine.dispatchEvent(\"emitterCreated\", {\n            container,\n            data: {\n                emitter: this,\n            },\n        });\n        this.play();\n    }\n    externalPause() {\n        this._paused = true;\n        this.pause();\n    }\n    externalPlay() {\n        this._paused = false;\n        this.play();\n    }\n    getPosition() {\n        if (this.options.domId) {\n            const container = this.container, element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    x: (elRect.x + elRect.width / 2) * container.retina.pixelRatio,\n                    y: (elRect.y + elRect.height / 2) * container.retina.pixelRatio,\n                };\n            }\n        }\n        return this.position;\n    }\n    getSize() {\n        const container = this.container;\n        if (this.options.domId) {\n            const element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    width: elRect.width * container.retina.pixelRatio,\n                    height: elRect.height * container.retina.pixelRatio,\n                };\n            }\n        }\n        return {\n            width: this.size.mode === \"percent\"\n                ? (container.canvas.size.width * this.size.width) / 100\n                : this.size.width,\n            height: this.size.mode === \"percent\"\n                ? (container.canvas.size.height * this.size.height) / 100\n                : this.size.height,\n        };\n    }\n    pause() {\n        if (this._paused) {\n            return;\n        }\n        delete this._emitDelay;\n    }\n    play() {\n        var _a;\n        if (this._paused) {\n            return;\n        }\n        if (!(this.container.retina.reduceFactor &&\n            (this._lifeCount > 0 || this._immortal || !this.options.life.count) &&\n            (this._firstSpawn || this._currentSpawnDelay >= ((_a = this._spawnDelay) !== null && _a !== void 0 ? _a : 0)))) {\n            return;\n        }\n        if (this._emitDelay === undefined) {\n            const delay = getRangeValue(this.options.rate.delay);\n            this._emitDelay = (1000 * delay) / this.container.retina.reduceFactor;\n        }\n        if (this._lifeCount > 0 || this._immortal) {\n            this.prepareToDie();\n        }\n    }\n    resize() {\n        const initialPosition = this._initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    update(delta) {\n        var _a, _b, _c;\n        if (this._paused) {\n            return;\n        }\n        if (this._firstSpawn) {\n            this._firstSpawn = false;\n            this._currentSpawnDelay = (_a = this._spawnDelay) !== null && _a !== void 0 ? _a : 0;\n            this._currentEmitDelay = (_b = this._emitDelay) !== null && _b !== void 0 ? _b : 0;\n        }\n        if (!this._startParticlesAdded) {\n            this._startParticlesAdded = true;\n            this.emitParticles(this.options.startCount);\n        }\n        if (this._duration !== undefined) {\n            this._currentDuration += delta.value;\n            if (this._currentDuration >= this._duration) {\n                this.pause();\n                if (this._spawnDelay !== undefined) {\n                    delete this._spawnDelay;\n                }\n                if (!this._immortal) {\n                    this._lifeCount--;\n                }\n                if (this._lifeCount > 0 || this._immortal) {\n                    this.position = this.calcPosition();\n                    this._spawnDelay = (((_c = this.options.life.delay) !== null && _c !== void 0 ? _c : 0) * 1000) / this.container.retina.reduceFactor;\n                }\n                else {\n                    this.destroy();\n                }\n                this._currentDuration -= this._duration;\n                delete this._duration;\n            }\n        }\n        if (this._spawnDelay !== undefined) {\n            this._currentSpawnDelay += delta.value;\n            if (this._currentSpawnDelay >= this._spawnDelay) {\n                this._engine.dispatchEvent(\"emitterPlay\", {\n                    container: this.container,\n                });\n                this.play();\n                this._currentSpawnDelay -= this._currentSpawnDelay;\n                delete this._spawnDelay;\n            }\n        }\n        if (this._emitDelay !== undefined) {\n            this._currentEmitDelay += delta.value;\n            if (this._currentEmitDelay >= this._emitDelay) {\n                this.emit();\n                this._currentEmitDelay -= this._emitDelay;\n            }\n        }\n    }\n    calcPosition() {\n        return calcPositionOrRandomFromSizeRanged({\n            size: this.container.canvas.size,\n            position: this.options.position,\n        });\n    }\n    destroy() {\n        this.emitters.removeEmitter(this);\n        this._engine.dispatchEvent(\"emitterDestroyed\", {\n            container: this.container,\n            data: {\n                emitter: this,\n            },\n        });\n    }\n    emit() {\n        if (this._paused) {\n            return;\n        }\n        const quantity = getRangeValue(this.options.rate.quantity);\n        this.emitParticles(quantity);\n    }\n    emitParticles(quantity) {\n        var _a, _b, _c;\n        const position = this.getPosition(), size = this.getSize(), singleParticlesOptions = itemFromSingleOrMultiple(this._particlesOptions);\n        for (let i = 0; i < quantity; i++) {\n            const particlesOptions = deepExtend({}, singleParticlesOptions);\n            if (this.spawnColor) {\n                const hslAnimation = (_a = this.options.spawnColor) === null || _a === void 0 ? void 0 : _a.animation;\n                if (hslAnimation) {\n                    this.spawnColor.h = this.setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n                    this.spawnColor.s = this.setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n                    this.spawnColor.l = this.setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n                }\n                if (!particlesOptions.color) {\n                    particlesOptions.color = {\n                        value: this.spawnColor,\n                    };\n                }\n                else {\n                    particlesOptions.color.value = this.spawnColor;\n                }\n            }\n            if (!position) {\n                return;\n            }\n            const pPosition = (_c = (_b = this._shape) === null || _b === void 0 ? void 0 : _b.randomPosition(position, size, this.fill)) !== null && _c !== void 0 ? _c : position;\n            this.container.particles.addParticle(pPosition, particlesOptions);\n        }\n    }\n    prepareToDie() {\n        var _a;\n        if (this._paused) {\n            return;\n        }\n        const duration = (_a = this.options.life) === null || _a === void 0 ? void 0 : _a.duration;\n        if (this.container.retina.reduceFactor &&\n            (this._lifeCount > 0 || this._immortal) &&\n            duration !== undefined &&\n            duration > 0) {\n            this._duration = duration * 1000;\n        }\n    }\n    setColorAnimation(animation, initValue, maxValue) {\n        var _a;\n        const container = this.container;\n        if (!animation.enable) {\n            return initValue;\n        }\n        const colorOffset = randomInRange(animation.offset), delay = getRangeValue(this.options.rate.delay), emitFactor = (1000 * delay) / container.retina.reduceFactor, colorSpeed = getRangeValue((_a = animation.speed) !== null && _a !== void 0 ? _a : 0);\n        return (initValue + (colorSpeed * container.fpsLimit) / emitFactor + colorOffset * 3.6) % maxValue;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}