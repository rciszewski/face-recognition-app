{"ast":null,"code":"import { clamp } from \"tsparticles-engine\";\n\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n  const factor = clamp(p1.options.collisions.absorb.speed * delta.factor / 10, 0, r2);\n  p1.size.value += factor / 2;\n  p2.size.value -= factor;\n\n  if (r2 <= pixelRatio) {\n    p2.size.value = 0;\n    p2.destroy();\n  }\n}\n\nexport function absorb(p1, p2, delta, pixelRatio) {\n  const r1 = p1.getRadius(),\n        r2 = p2.getRadius();\n\n  if (r1 === undefined && r2 !== undefined) {\n    p1.destroy();\n  } else if (r1 !== undefined && r2 === undefined) {\n    p2.destroy();\n  } else if (r1 !== undefined && r2 !== undefined) {\n    if (r1 >= r2) {\n      updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n    } else {\n      updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n    }\n  }\n}","map":{"version":3,"names":["clamp","updateAbsorb","p1","r1","p2","r2","delta","pixelRatio","factor","options","collisions","absorb","speed","size","value","destroy","getRadius","undefined"],"sources":["/Users/ronciszewski/Desktop/Programming/SmartBrain/face-recognition-app/node_modules/tsparticles-interaction-particles-collisions/esm/Absorb.js"],"sourcesContent":["import { clamp } from \"tsparticles-engine\";\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / 10, 0, r2);\n    p1.size.value += factor / 2;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n"],"mappings":"AAAA,SAASA,KAAT,QAAsB,oBAAtB;;AACA,SAASC,YAAT,CAAsBC,EAAtB,EAA0BC,EAA1B,EAA8BC,EAA9B,EAAkCC,EAAlC,EAAsCC,KAAtC,EAA6CC,UAA7C,EAAyD;EACrD,MAAMC,MAAM,GAAGR,KAAK,CAAEE,EAAE,CAACO,OAAH,CAAWC,UAAX,CAAsBC,MAAtB,CAA6BC,KAA7B,GAAqCN,KAAK,CAACE,MAA5C,GAAsD,EAAvD,EAA2D,CAA3D,EAA8DH,EAA9D,CAApB;EACAH,EAAE,CAACW,IAAH,CAAQC,KAAR,IAAiBN,MAAM,GAAG,CAA1B;EACAJ,EAAE,CAACS,IAAH,CAAQC,KAAR,IAAiBN,MAAjB;;EACA,IAAIH,EAAE,IAAIE,UAAV,EAAsB;IAClBH,EAAE,CAACS,IAAH,CAAQC,KAAR,GAAgB,CAAhB;IACAV,EAAE,CAACW,OAAH;EACH;AACJ;;AACD,OAAO,SAASJ,MAAT,CAAgBT,EAAhB,EAAoBE,EAApB,EAAwBE,KAAxB,EAA+BC,UAA/B,EAA2C;EAC9C,MAAMJ,EAAE,GAAGD,EAAE,CAACc,SAAH,EAAX;EAAA,MAA2BX,EAAE,GAAGD,EAAE,CAACY,SAAH,EAAhC;;EACA,IAAIb,EAAE,KAAKc,SAAP,IAAoBZ,EAAE,KAAKY,SAA/B,EAA0C;IACtCf,EAAE,CAACa,OAAH;EACH,CAFD,MAGK,IAAIZ,EAAE,KAAKc,SAAP,IAAoBZ,EAAE,KAAKY,SAA/B,EAA0C;IAC3Cb,EAAE,CAACW,OAAH;EACH,CAFI,MAGA,IAAIZ,EAAE,KAAKc,SAAP,IAAoBZ,EAAE,KAAKY,SAA/B,EAA0C;IAC3C,IAAId,EAAE,IAAIE,EAAV,EAAc;MACVJ,YAAY,CAACC,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,EAAiBC,KAAjB,EAAwBC,UAAxB,CAAZ;IACH,CAFD,MAGK;MACDN,YAAY,CAACG,EAAD,EAAKC,EAAL,EAASH,EAAT,EAAaC,EAAb,EAAiBG,KAAjB,EAAwBC,UAAxB,CAAZ;IACH;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}