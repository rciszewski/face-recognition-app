{"ast":null,"code":"import { ExternalInteractorBase } from \"tsparticles-engine\";\nimport { Remove } from \"./Options/Classes/Remove\";\nexport class Remover extends ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n\n    this.handleClickMode = mode => {\n      const container = this.container,\n            options = container.actualOptions;\n\n      if (!options.interactivity.modes.remove || mode !== \"remove\") {\n        return;\n      }\n\n      const removeNb = options.interactivity.modes.remove.quantity;\n      container.particles.removeQuantity(removeNb);\n    };\n  }\n\n  clear() {}\n\n  init() {}\n\n  async interact() {}\n\n  isEnabled() {\n    return true;\n  }\n\n  loadModeOptions(options) {\n    if (!options.remove) {\n      options.remove = new Remove();\n    }\n\n    for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      sources[_key - 1] = arguments[_key];\n    }\n\n    for (const source of sources) {\n      options.remove.load(source === null || source === void 0 ? void 0 : source.remove);\n    }\n  }\n\n  reset() {}\n\n}","map":{"version":3,"names":["ExternalInteractorBase","Remove","Remover","constructor","container","handleClickMode","mode","options","actualOptions","interactivity","modes","remove","removeNb","quantity","particles","removeQuantity","clear","init","interact","isEnabled","loadModeOptions","sources","source","load","reset"],"sources":["/Users/ronciszewski/Desktop/Programming/SmartBrain/face-recognition-app/node_modules/tsparticles-interaction-external-remove/esm/Remover.js"],"sourcesContent":["import { ExternalInteractorBase } from \"tsparticles-engine\";\nimport { Remove } from \"./Options/Classes/Remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== \"remove\") {\n                return;\n            }\n            const removeNb = options.interactivity.modes.remove.quantity;\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source === null || source === void 0 ? void 0 : source.remove);\n        }\n    }\n    reset() {\n    }\n}\n"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,oBAAvC;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,OAAO,MAAMC,OAAN,SAAsBF,sBAAtB,CAA6C;EAChDG,WAAW,CAACC,SAAD,EAAY;IACnB,MAAMA,SAAN;;IACA,KAAKC,eAAL,GAAwBC,IAAD,IAAU;MAC7B,MAAMF,SAAS,GAAG,KAAKA,SAAvB;MAAA,MAAkCG,OAAO,GAAGH,SAAS,CAACI,aAAtD;;MACA,IAAI,CAACD,OAAO,CAACE,aAAR,CAAsBC,KAAtB,CAA4BC,MAA7B,IAAuCL,IAAI,KAAK,QAApD,EAA8D;QAC1D;MACH;;MACD,MAAMM,QAAQ,GAAGL,OAAO,CAACE,aAAR,CAAsBC,KAAtB,CAA4BC,MAA5B,CAAmCE,QAApD;MACAT,SAAS,CAACU,SAAV,CAAoBC,cAApB,CAAmCH,QAAnC;IACH,CAPD;EAQH;;EACDI,KAAK,GAAG,CACP;;EACDC,IAAI,GAAG,CACN;;EACa,MAARC,QAAQ,GAAG,CAChB;;EACDC,SAAS,GAAG;IACR,OAAO,IAAP;EACH;;EACDC,eAAe,CAACb,OAAD,EAAsB;IACjC,IAAI,CAACA,OAAO,CAACI,MAAb,EAAqB;MACjBJ,OAAO,CAACI,MAAR,GAAiB,IAAIV,MAAJ,EAAjB;IACH;;IAHgC,kCAAToB,OAAS;MAATA,OAAS;IAAA;;IAIjC,KAAK,MAAMC,MAAX,IAAqBD,OAArB,EAA8B;MAC1Bd,OAAO,CAACI,MAAR,CAAeY,IAAf,CAAoBD,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACX,MAA3E;IACH;EACJ;;EACDa,KAAK,GAAG,CACP;;AA9B+C"},"metadata":{},"sourceType":"module","externalDependencies":[]}