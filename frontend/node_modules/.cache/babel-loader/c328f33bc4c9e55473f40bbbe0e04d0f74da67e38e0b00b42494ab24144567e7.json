{"ast":null,"code":"var _jsxFileName = \"/Users/ronciszewski/Desktop/Programming/SmartBrain/face-recognition-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport Particles from \"react-tsparticles\";\nimport Clarifai from 'clarifai';\nimport { loadFull } from \"tsparticles\";\nimport { tsParticles } from \"tsparticles-engine\";\nimport { particlesOptions } from './ParticleOptions';\nimport Navigation from './components/Navigation/Navigation';\nimport SignIn from \"./components/SignIn/SignIn\";\nimport Register from \"./components/Register/Register\";\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: '5f7089c95a9a46e2a37c402e60dd41fd'\n}); //Load particles background from tsParticles package\n\nconst particlesInit = async main => {\n  await loadFull(tsParticles);\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: '',\n          entries: 0,\n          joined: ''\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      //storing data needed from Clarifai object into a variable\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box; //selecting the img tag in FaceRecognition component\n\n      const image = document.getElementById('inputimage'); //getting width & height of img\n\n      const width = Number(image.width);\n      const height = Number(image.height); //returning an object for facebox div dimensions according to Clarifai API\n\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      } else {\n        this.setState({\n          isSignedIn: false\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      imageUrl: '',\n      input: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      imageUrl,\n      box,\n      route,\n      isSignedIn\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        id: \"tsparticles\",\n        init: particlesInit,\n        options: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        onRouteChange: this.onRouteChange,\n        isSignedIn: isSignedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true) : route === 'signin' ? /*#__PURE__*/_jsxDEV(SignIn, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","Particles","Clarifai","loadFull","tsParticles","particlesOptions","Navigation","SignIn","Register","Logo","Rank","ImageLinkForm","FaceRecognition","app","App","apiKey","particlesInit","main","constructor","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","event","input","target","value","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","onRouteChange","route","isSignedIn","render"],"sources":["/Users/ronciszewski/Desktop/Programming/SmartBrain/face-recognition-app/src/App.js"],"sourcesContent":["import React, {Component} from \"react\";\nimport Particles from \"react-tsparticles\";\nimport Clarifai from 'clarifai';\nimport { loadFull } from \"tsparticles\";\nimport { tsParticles } from \"tsparticles-engine\";\nimport { particlesOptions } from './ParticleOptions';\nimport Navigation from './components/Navigation/Navigation';\nimport SignIn from \"./components/SignIn/SignIn\";\nimport Register from \"./components/Register/Register\";\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport './App.css';\n\nconst app = new Clarifai.App({\n  apiKey: '5f7089c95a9a46e2a37c402e60dd41fd'\n});\n\n//Load particles background from tsParticles package\nconst particlesInit = async (main) => {\n  await loadFull(tsParticles);\n};\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      imageUrl: '',\n      input: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n\n      }\n    }\n  }\n\nloadUser = (data) => {\n  this.setState({user: {\n    id: data.id,\n    name: data.name,\n    email: '',\n    entries: 0,\n    joined: ''\n  }})\n}\n\ncalculateFaceLocation = (data) => {\n  //storing data needed from Clarifai object into a variable\n  const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n  //selecting the img tag in FaceRecognition component\n  const image = document.getElementById('inputimage');\n  //getting width & height of img\n  const width = Number(image.width);\n  const height = Number(image.height);\n  //returning an object for facebox div dimensions according to Clarifai API\n  return {\n    leftCol: clarifaiFace.left_col * width,\n    topRow: clarifaiFace.top_row * height,\n    rightCol: width - (clarifaiFace.right_col * width),\n    bottomRow: height - (clarifaiFace.bottom_row * height)\n  }\n}\n\ndisplayFaceBox = (box) => {\n  this.setState({box: box});\n}\n\nonInputChange = (event) => {\n  this.setState({input: event.target.value})\n}\n\nonButtonSubmit = () => {\n  this.setState({imageUrl: this.state.input});\n\n  app.models.predict(\n    Clarifai.FACE_DETECT_MODEL, this.state.input)\n    .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n    .catch(err => console.log(err))\n}\n\nonRouteChange = (route) => {\n  if (route === 'home'){\n    this.setState({isSignedIn: true})\n  } else {\n    this.setState({isSignedIn: false})\n  }\n  this.setState({route: route});\n}\n\n  render (){\n    const {imageUrl, box, route, isSignedIn} = this.state;\n    return (\n      <div>\n        <Particles \n          className=\"particles\" \n          id=\"tsparticles\" \n          init={particlesInit} \n          options={particlesOptions} \n        />\n        <Navigation onRouteChange={this.onRouteChange} isSignedIn={isSignedIn}/>\n        { route === 'home' \n          ? <>\n          <Logo />\n          <Rank />\n          <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/> \n          <FaceRecognition box={box} imageUrl={imageUrl}/> \n          </>\n          : (\n            route === 'signin'\n          ? <SignIn onRouteChange={this.onRouteChange} />\n          : <Register onRouteChange={this.onRouteChange} />\n          )\n       }\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}