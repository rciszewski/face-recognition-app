{"ast":null,"code":"import { calculateBounds } from \"tsparticles-engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils\";\nexport class BounceOutMode {\n  constructor(container) {\n    this.container = container;\n    this.modes = [\"bounce\", \"bounce-vertical\", \"bounce-horizontal\", \"bounceVertical\", \"bounceHorizontal\", \"split\"];\n  }\n\n  update(particle, direction, delta, outMode) {\n    if (!this.modes.includes(outMode)) {\n      return;\n    }\n\n    const container = this.container;\n    let handled = false;\n\n    for (const [, plugin] of container.plugins) {\n      if (plugin.particleBounce !== undefined) {\n        handled = plugin.particleBounce(particle, delta, direction);\n      }\n\n      if (handled) {\n        break;\n      }\n    }\n\n    if (handled) {\n      return;\n    }\n\n    const pos = particle.getPosition(),\n          offset = particle.offset,\n          size = particle.getRadius(),\n          bounds = calculateBounds(pos, size),\n          canvasSize = container.canvas.size;\n    bounceHorizontal({\n      particle,\n      outMode,\n      direction,\n      bounds,\n      canvasSize,\n      offset,\n      size\n    });\n    bounceVertical({\n      particle,\n      outMode,\n      direction,\n      bounds,\n      canvasSize,\n      offset,\n      size\n    });\n  }\n\n}","map":{"version":3,"names":["calculateBounds","bounceHorizontal","bounceVertical","BounceOutMode","constructor","container","modes","update","particle","direction","delta","outMode","includes","handled","plugin","plugins","particleBounce","undefined","pos","getPosition","offset","size","getRadius","bounds","canvasSize","canvas"],"sources":["/Users/ronciszewski/Desktop/SmartBrain/face-recognition-app/node_modules/tsparticles-updater-out-modes/esm/BounceOutMode.js"],"sourcesContent":["import { calculateBounds } from \"tsparticles-engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            \"bounce\",\n            \"bounce-vertical\",\n            \"bounce-horizontal\",\n            \"bounceVertical\",\n            \"bounceHorizontal\",\n            \"split\",\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n"],"mappings":"AAAA,SAASA,eAAT,QAAgC,oBAAhC;AACA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,SAAjD;AACA,OAAO,MAAMC,aAAN,CAAoB;EACvBC,WAAW,CAACC,SAAD,EAAY;IACnB,KAAKA,SAAL,GAAiBA,SAAjB;IACA,KAAKC,KAAL,GAAa,CACT,QADS,EAET,iBAFS,EAGT,mBAHS,EAIT,gBAJS,EAKT,kBALS,EAMT,OANS,CAAb;EAQH;;EACDC,MAAM,CAACC,QAAD,EAAWC,SAAX,EAAsBC,KAAtB,EAA6BC,OAA7B,EAAsC;IACxC,IAAI,CAAC,KAAKL,KAAL,CAAWM,QAAX,CAAoBD,OAApB,CAAL,EAAmC;MAC/B;IACH;;IACD,MAAMN,SAAS,GAAG,KAAKA,SAAvB;IACA,IAAIQ,OAAO,GAAG,KAAd;;IACA,KAAK,MAAM,GAAGC,MAAH,CAAX,IAAyBT,SAAS,CAACU,OAAnC,EAA4C;MACxC,IAAID,MAAM,CAACE,cAAP,KAA0BC,SAA9B,EAAyC;QACrCJ,OAAO,GAAGC,MAAM,CAACE,cAAP,CAAsBR,QAAtB,EAAgCE,KAAhC,EAAuCD,SAAvC,CAAV;MACH;;MACD,IAAII,OAAJ,EAAa;QACT;MACH;IACJ;;IACD,IAAIA,OAAJ,EAAa;MACT;IACH;;IACD,MAAMK,GAAG,GAAGV,QAAQ,CAACW,WAAT,EAAZ;IAAA,MAAoCC,MAAM,GAAGZ,QAAQ,CAACY,MAAtD;IAAA,MAA8DC,IAAI,GAAGb,QAAQ,CAACc,SAAT,EAArE;IAAA,MAA2FC,MAAM,GAAGvB,eAAe,CAACkB,GAAD,EAAMG,IAAN,CAAnH;IAAA,MAAgIG,UAAU,GAAGnB,SAAS,CAACoB,MAAV,CAAiBJ,IAA9J;IACApB,gBAAgB,CAAC;MAAEO,QAAF;MAAYG,OAAZ;MAAqBF,SAArB;MAAgCc,MAAhC;MAAwCC,UAAxC;MAAoDJ,MAApD;MAA4DC;IAA5D,CAAD,CAAhB;IACAnB,cAAc,CAAC;MAAEM,QAAF;MAAYG,OAAZ;MAAqBF,SAArB;MAAgCc,MAAhC;MAAwCC,UAAxC;MAAoDJ,MAApD;MAA4DC;IAA5D,CAAD,CAAd;EACH;;AAhCsB"},"metadata":{},"sourceType":"module"}