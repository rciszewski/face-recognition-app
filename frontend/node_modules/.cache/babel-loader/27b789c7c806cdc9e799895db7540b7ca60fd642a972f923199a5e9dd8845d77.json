{"ast":null,"code":"import { getHslAnimationFromHsl, randomInRange, rangeColorToHsl } from \"tsparticles-engine\";\n\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\n  var _a, _b;\n\n  const colorValue = value;\n\n  if (!colorValue || !valueAnimation.enable) {\n    return;\n  }\n\n  const offset = randomInRange(valueAnimation.offset),\n        velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6,\n        decay = (_b = value.decay) !== null && _b !== void 0 ? _b : 1;\n\n  if (!decrease || colorValue.status === 0) {\n    colorValue.value += velocity;\n\n    if (decrease && colorValue.value > max) {\n      colorValue.status = 1;\n      colorValue.value -= colorValue.value % max;\n    }\n  } else {\n    colorValue.value -= velocity;\n\n    if (colorValue.value < 0) {\n      colorValue.status = 0;\n      colorValue.value += colorValue.value;\n    }\n  }\n\n  if (colorValue.velocity && decay !== 1) {\n    colorValue.velocity *= decay;\n  }\n\n  if (colorValue.value > max) {\n    colorValue.value %= max;\n  }\n}\n\nfunction updateColor(particle, delta) {\n  var _a, _b, _c;\n\n  const animationOptions = particle.options.color.animation;\n\n  if (((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h) !== undefined) {\n    updateColorValue(delta, particle.color.h, animationOptions.h, 360, false);\n  }\n\n  if (((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s) !== undefined) {\n    updateColorValue(delta, particle.color.s, animationOptions.s, 100, true);\n  }\n\n  if (((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l) !== undefined) {\n    updateColorValue(delta, particle.color.l, animationOptions.l, 100, true);\n  }\n}\n\nexport class ColorUpdater {\n  constructor(container) {\n    this.container = container;\n  }\n\n  init(particle) {\n    const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n\n    if (hslColor) {\n      particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n    }\n  }\n\n  isEnabled(particle) {\n    var _a, _b, _c;\n\n    const animationOptions = particle.options.color.animation;\n    return !particle.destroyed && !particle.spawning && (((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h.value) !== undefined && animationOptions.h.enable || ((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s.value) !== undefined && animationOptions.s.enable || ((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l.value) !== undefined && animationOptions.l.enable);\n  }\n\n  update(particle, delta) {\n    updateColor(particle, delta);\n  }\n\n}","map":{"version":3,"names":["getHslAnimationFromHsl","randomInRange","rangeColorToHsl","updateColorValue","delta","value","valueAnimation","max","decrease","_a","_b","colorValue","enable","offset","velocity","factor","decay","status","updateColor","particle","_c","animationOptions","options","color","animation","h","undefined","s","l","ColorUpdater","constructor","container","init","hslColor","id","reduceDuplicates","retina","reduceFactor","isEnabled","destroyed","spawning","update"],"sources":["/Users/ronciszewski/Desktop/Programming/SmartBrain/face-recognition-app/frontend/node_modules/tsparticles-updater-color/esm/ColorUpdater.js"],"sourcesContent":["import { getHslAnimationFromHsl, randomInRange, rangeColorToHsl } from \"tsparticles-engine\";\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\n    var _a, _b;\n    const colorValue = value;\n    if (!colorValue || !valueAnimation.enable) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6, decay = (_b = value.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!decrease || colorValue.status === 0) {\n        colorValue.value += velocity;\n        if (decrease && colorValue.value > max) {\n            colorValue.status = 1;\n            colorValue.value -= colorValue.value % max;\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            colorValue.status = 0;\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nfunction updateColor(particle, delta) {\n    var _a, _b, _c;\n    const animationOptions = particle.options.color.animation;\n    if (((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h) !== undefined) {\n        updateColorValue(delta, particle.color.h, animationOptions.h, 360, false);\n    }\n    if (((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s) !== undefined) {\n        updateColorValue(delta, particle.color.s, animationOptions.s, 100, true);\n    }\n    if (((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l) !== undefined) {\n        updateColorValue(delta, particle.color.l, animationOptions.l, 100, true);\n    }\n}\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c;\n        const animationOptions = particle.options.color.animation;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h.value) !== undefined && animationOptions.h.enable) ||\n                (((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s.value) !== undefined && animationOptions.s.enable) ||\n                (((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l.value) !== undefined && animationOptions.l.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle, delta);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}