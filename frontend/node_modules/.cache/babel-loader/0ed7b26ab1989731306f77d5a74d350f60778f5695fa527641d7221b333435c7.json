{"ast":null,"code":"import { ExternalInteractorBase, getDistance, isInArray } from \"tsparticles-engine\";\nimport { Slow } from \"./Options/Classes/Slow\";\nexport class Slower extends ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n  }\n\n  clear(particle, delta, force) {\n    if (particle.slow.inRange && !force) {\n      return;\n    }\n\n    particle.slow.factor = 1;\n  }\n\n  init() {\n    const container = this.container,\n          slow = container.actualOptions.interactivity.modes.slow;\n\n    if (!slow) {\n      return;\n    }\n\n    container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n  }\n\n  async interact() {}\n\n  isEnabled(particle) {\n    var _a;\n\n    const container = this.container,\n          mouse = container.interactivity.mouse,\n          events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity).events;\n    return events.onHover.enable && !!mouse.position && isInArray(\"slow\", events.onHover.mode);\n  }\n\n  loadModeOptions(options) {\n    if (!options.slow) {\n      options.slow = new Slow();\n    }\n\n    for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      sources[_key - 1] = arguments[_key];\n    }\n\n    for (const source of sources) {\n      options.slow.load(source === null || source === void 0 ? void 0 : source.slow);\n    }\n  }\n\n  reset(particle) {\n    particle.slow.inRange = false;\n    const container = this.container,\n          options = container.actualOptions,\n          mousePos = container.interactivity.mouse.position,\n          radius = container.retina.slowModeRadius,\n          slow = options.interactivity.modes.slow;\n\n    if (!slow || !radius || radius < 0 || !mousePos) {\n      return;\n    }\n\n    const particlePos = particle.getPosition(),\n          dist = getDistance(mousePos, particlePos),\n          proximityFactor = dist / radius,\n          slowFactor = slow.factor;\n\n    if (dist <= radius) {\n      particle.slow.inRange = true;\n      particle.slow.factor = proximityFactor / slowFactor;\n    }\n  }\n\n}","map":{"version":3,"names":["ExternalInteractorBase","getDistance","isInArray","Slow","Slower","constructor","container","clear","particle","delta","force","slow","inRange","factor","init","actualOptions","interactivity","modes","retina","slowModeRadius","radius","pixelRatio","interact","isEnabled","_a","mouse","events","onHover","enable","position","mode","loadModeOptions","options","sources","source","load","reset","mousePos","particlePos","getPosition","dist","proximityFactor","slowFactor"],"sources":["/Users/ronciszewski/Desktop/Programming/SmartBrain/face-recognition-app/node_modules/tsparticles-interaction-external-slow/esm/Slower.js"],"sourcesContent":["import { ExternalInteractorBase, getDistance, isInArray } from \"tsparticles-engine\";\nimport { Slow } from \"./Options/Classes/Slow\";\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"slow\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source === null || source === void 0 ? void 0 : source.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slow = options.interactivity.modes.slow;\n        if (!slow || !radius || radius < 0 || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slow.factor;\n        if (dist <= radius) {\n            particle.slow.inRange = true;\n            particle.slow.factor = proximityFactor / slowFactor;\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}