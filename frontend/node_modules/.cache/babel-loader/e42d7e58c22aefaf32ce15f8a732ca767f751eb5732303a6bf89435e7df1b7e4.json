{"ast":null,"code":"import { Container } from \"./Container\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nimport { itemFromSingleOrMultiple } from \"../Utils/Utils\";\n\nfunction fetchError(statusCode) {\n  console.error(`tsParticles - Error ${statusCode} while retrieving config file`);\n}\n\nasync function getDataFromUrl(jsonUrl, index) {\n  const url = itemFromSingleOrMultiple(jsonUrl, index);\n\n  if (!url) {\n    return;\n  }\n\n  const response = await fetch(url);\n\n  if (response.ok) {\n    return response.json();\n  }\n\n  fetchError(response.status);\n}\n\nexport class Loader {\n  constructor(engine) {\n    this._engine = engine;\n  }\n\n  load(tagId, options, index) {\n    const params = {\n      index,\n      remote: false\n    };\n\n    if (typeof tagId === \"string\") {\n      params.tagId = tagId;\n    } else {\n      params.options = tagId;\n    }\n\n    if (typeof options === \"number\") {\n      params.index = options;\n    } else {\n      params.options = options !== null && options !== void 0 ? options : params.options;\n    }\n\n    return this.loadOptions(params);\n  }\n\n  async loadJSON(tagId, jsonUrl, index) {\n    let url, id;\n\n    if (typeof jsonUrl === \"number\" || jsonUrl === undefined) {\n      url = tagId;\n    } else {\n      id = tagId;\n      url = jsonUrl;\n    }\n\n    return this.loadRemoteOptions({\n      tagId: id,\n      url,\n      index,\n      remote: true\n    });\n  }\n\n  async loadOptions(params) {\n    var _a, _b, _c;\n\n    const tagId = (_a = params.tagId) !== null && _a !== void 0 ? _a : `tsparticles${Math.floor(getRandom() * 10000)}`,\n          {\n      index,\n      url: jsonUrl,\n      remote\n    } = params,\n          options = remote ? await getDataFromUrl(jsonUrl, index) : params.options;\n    let domContainer = (_b = params.element) !== null && _b !== void 0 ? _b : document.getElementById(tagId);\n\n    if (!domContainer) {\n      domContainer = document.createElement(\"div\");\n      domContainer.id = tagId;\n      (_c = document.querySelector(\"body\")) === null || _c === void 0 ? void 0 : _c.append(domContainer);\n    }\n\n    const currentOptions = itemFromSingleOrMultiple(options, index),\n          dom = this._engine.dom(),\n          oldIndex = dom.findIndex(v => v.id === tagId);\n\n    if (oldIndex >= 0) {\n      const old = this._engine.domItem(oldIndex);\n\n      if (old && !old.destroyed) {\n        old.destroy();\n        dom.splice(oldIndex, 1);\n      }\n    }\n\n    let canvasEl;\n\n    if (domContainer.tagName.toLowerCase() === \"canvas\") {\n      canvasEl = domContainer;\n      canvasEl.dataset[generatedAttribute] = \"false\";\n    } else {\n      const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n\n      if (existingCanvases.length) {\n        canvasEl = existingCanvases[0];\n        canvasEl.dataset[generatedAttribute] = \"false\";\n      } else {\n        canvasEl = document.createElement(\"canvas\");\n        canvasEl.dataset[generatedAttribute] = \"true\";\n        domContainer.appendChild(canvasEl);\n      }\n    }\n\n    if (!canvasEl.style.width) {\n      canvasEl.style.width = \"100%\";\n    }\n\n    if (!canvasEl.style.height) {\n      canvasEl.style.height = \"100%\";\n    }\n\n    const newItem = new Container(this._engine, tagId, currentOptions);\n\n    if (oldIndex >= 0) {\n      dom.splice(oldIndex, 0, newItem);\n    } else {\n      dom.push(newItem);\n    }\n\n    newItem.canvas.loadCanvas(canvasEl);\n    await newItem.start();\n    return newItem;\n  }\n\n  async loadRemoteOptions(params) {\n    return this.loadOptions(params);\n  }\n\n  async set(id, domContainer, options, index) {\n    const params = {\n      index,\n      remote: false\n    };\n\n    if (typeof id === \"string\") {\n      params.tagId = id;\n    } else {\n      params.element = id;\n    }\n\n    if (domContainer instanceof HTMLElement) {\n      params.element = domContainer;\n    } else {\n      params.options = domContainer;\n    }\n\n    if (typeof options === \"number\") {\n      params.index = options;\n    } else {\n      params.options = options !== null && options !== void 0 ? options : params.options;\n    }\n\n    return this.loadOptions(params);\n  }\n\n  async setJSON(id, domContainer, jsonUrl, index) {\n    let url, newId, newIndex, element;\n\n    if (id instanceof HTMLElement) {\n      element = id;\n      url = domContainer;\n      newIndex = jsonUrl;\n    } else {\n      newId = id;\n      element = domContainer;\n      url = jsonUrl;\n      newIndex = index;\n    }\n\n    return this.loadRemoteOptions({\n      tagId: newId,\n      url,\n      index: newIndex,\n      element,\n      remote: true\n    });\n  }\n\n}","map":{"version":3,"names":["Container","generatedAttribute","getRandom","itemFromSingleOrMultiple","fetchError","statusCode","console","error","getDataFromUrl","jsonUrl","index","url","response","fetch","ok","json","status","Loader","constructor","engine","_engine","load","tagId","options","params","remote","loadOptions","loadJSON","id","undefined","loadRemoteOptions","_a","_b","_c","Math","floor","domContainer","element","document","getElementById","createElement","querySelector","append","currentOptions","dom","oldIndex","findIndex","v","old","domItem","destroyed","destroy","splice","canvasEl","tagName","toLowerCase","dataset","existingCanvases","getElementsByTagName","length","appendChild","style","width","height","newItem","push","canvas","loadCanvas","start","set","HTMLElement","setJSON","newId","newIndex"],"sources":["/Users/ronciszewski/Desktop/Programming/SmartBrain/face-recognition-app/node_modules/tsparticles-engine/esm/Core/Loader.js"],"sourcesContent":["import { Container } from \"./Container\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nimport { itemFromSingleOrMultiple } from \"../Utils/Utils\";\nfunction fetchError(statusCode) {\n    console.error(`tsParticles - Error ${statusCode} while retrieving config file`);\n}\nasync function getDataFromUrl(jsonUrl, index) {\n    const url = itemFromSingleOrMultiple(jsonUrl, index);\n    if (!url) {\n        return;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    fetchError(response.status);\n}\nexport class Loader {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    load(tagId, options, index) {\n        const params = { index, remote: false };\n        if (typeof tagId === \"string\") {\n            params.tagId = tagId;\n        }\n        else {\n            params.options = tagId;\n        }\n        if (typeof options === \"number\") {\n            params.index = options;\n        }\n        else {\n            params.options = options !== null && options !== void 0 ? options : params.options;\n        }\n        return this.loadOptions(params);\n    }\n    async loadJSON(tagId, jsonUrl, index) {\n        let url, id;\n        if (typeof jsonUrl === \"number\" || jsonUrl === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = jsonUrl;\n        }\n        return this.loadRemoteOptions({ tagId: id, url, index, remote: true });\n    }\n    async loadOptions(params) {\n        var _a, _b, _c;\n        const tagId = (_a = params.tagId) !== null && _a !== void 0 ? _a : `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url: jsonUrl, remote } = params, options = remote ? await getDataFromUrl(jsonUrl, index) : params.options;\n        let domContainer = (_b = params.element) !== null && _b !== void 0 ? _b : document.getElementById(tagId);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = tagId;\n            (_c = document.querySelector(\"body\")) === null || _c === void 0 ? void 0 : _c.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this._engine.dom(), oldIndex = dom.findIndex((v) => v.id === tagId);\n        if (oldIndex >= 0) {\n            const old = this._engine.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this._engine, tagId, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n    async loadRemoteOptions(params) {\n        return this.loadOptions(params);\n    }\n    async set(id, domContainer, options, index) {\n        const params = { index, remote: false };\n        if (typeof id === \"string\") {\n            params.tagId = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (domContainer instanceof HTMLElement) {\n            params.element = domContainer;\n        }\n        else {\n            params.options = domContainer;\n        }\n        if (typeof options === \"number\") {\n            params.index = options;\n        }\n        else {\n            params.options = options !== null && options !== void 0 ? options : params.options;\n        }\n        return this.loadOptions(params);\n    }\n    async setJSON(id, domContainer, jsonUrl, index) {\n        let url, newId, newIndex, element;\n        if (id instanceof HTMLElement) {\n            element = id;\n            url = domContainer;\n            newIndex = jsonUrl;\n        }\n        else {\n            newId = id;\n            element = domContainer;\n            url = jsonUrl;\n            newIndex = index;\n        }\n        return this.loadRemoteOptions({ tagId: newId, url, index: newIndex, element, remote: true });\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}