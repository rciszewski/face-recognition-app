{"ast":null,"code":"import { Circle, ExternalInteractorBase, Vector, calcEasing, clamp, getDistances, isInArray, mouseMoveEvent } from \"tsparticles-engine\";\nexport class Attractor extends ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n\n    if (!container.attract) {\n      container.attract = {\n        particles: []\n      };\n    }\n\n    this.handleClickMode = mode => {\n      const options = this.container.actualOptions;\n\n      if (mode !== \"attract\") {\n        return;\n      }\n\n      if (!container.attract) {\n        container.attract = {\n          particles: []\n        };\n      }\n\n      container.attract.clicking = true;\n      container.attract.count = 0;\n\n      for (const particle of container.attract.particles) {\n        particle.velocity.setTo(particle.initialVelocity);\n      }\n\n      container.attract.particles = [];\n      container.attract.finish = false;\n      setTimeout(() => {\n        if (!container.destroyed) {\n          if (!container.attract) {\n            container.attract = {\n              particles: []\n            };\n          }\n\n          container.attract.clicking = false;\n        }\n      }, options.interactivity.modes.attract.duration * 1000);\n    };\n  }\n\n  isEnabled() {\n    const container = this.container,\n          options = container.actualOptions,\n          mouse = container.interactivity.mouse,\n          events = options.interactivity.events;\n\n    if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n      return false;\n    }\n\n    const hoverMode = events.onHover.mode,\n          clickMode = events.onClick.mode;\n    return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n  }\n\n  reset() {}\n\n  async interact() {\n    const container = this.container,\n          options = container.actualOptions,\n          mouseMoveStatus = container.interactivity.status === mouseMoveEvent,\n          events = options.interactivity.events,\n          hoverEnabled = events.onHover.enable,\n          hoverMode = events.onHover.mode,\n          clickEnabled = events.onClick.enable,\n          clickMode = events.onClick.mode;\n\n    if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n      this.hoverAttract();\n    } else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n      this.clickAttract();\n    }\n  }\n\n  hoverAttract() {\n    const container = this.container;\n    const mousePos = container.interactivity.mouse.position;\n\n    if (!mousePos) {\n      return;\n    }\n\n    const attractRadius = container.retina.attractModeDistance;\n    this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n  }\n\n  processAttract(position, attractRadius, area) {\n    const container = this.container;\n    const attractOptions = container.actualOptions.interactivity.modes.attract;\n    const query = container.particles.quadTree.query(area);\n\n    for (const particle of query) {\n      const {\n        dx,\n        dy,\n        distance\n      } = getDistances(particle.position, position);\n      const velocity = attractOptions.speed * attractOptions.factor;\n      const attractFactor = clamp(calcEasing(1 - distance / attractRadius, attractOptions.easing) * velocity, 0, attractOptions.maxSpeed);\n      const normVec = Vector.create(distance === 0 ? velocity : dx / distance * attractFactor, distance === 0 ? velocity : dy / distance * attractFactor);\n      particle.position.subFrom(normVec);\n    }\n  }\n\n  clickAttract() {\n    const container = this.container;\n\n    if (!container.attract) {\n      container.attract = {\n        particles: []\n      };\n    }\n\n    if (!container.attract.finish) {\n      if (!container.attract.count) {\n        container.attract.count = 0;\n      }\n\n      container.attract.count++;\n\n      if (container.attract.count === container.particles.count) {\n        container.attract.finish = true;\n      }\n    }\n\n    if (container.attract.clicking) {\n      const mousePos = container.interactivity.mouse.clickPosition;\n\n      if (!mousePos) {\n        return;\n      }\n\n      const attractRadius = container.retina.attractModeDistance;\n      this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n    } else if (container.attract.clicking === false) {\n      container.attract.particles = [];\n    }\n\n    return;\n  }\n\n}","map":{"version":3,"names":["Circle","ExternalInteractorBase","Vector","calcEasing","clamp","getDistances","isInArray","mouseMoveEvent","Attractor","constructor","container","attract","particles","handleClickMode","mode","options","actualOptions","clicking","count","particle","velocity","setTo","initialVelocity","finish","setTimeout","destroyed","interactivity","modes","duration","isEnabled","mouse","events","position","onHover","enable","clickPosition","onClick","hoverMode","clickMode","reset","interact","mouseMoveStatus","status","hoverEnabled","clickEnabled","hoverAttract","clickAttract","mousePos","attractRadius","retina","attractModeDistance","processAttract","x","y","area","attractOptions","query","quadTree","dx","dy","distance","speed","factor","attractFactor","easing","maxSpeed","normVec","create","subFrom"],"sources":["/Users/ronciszewski/Desktop/SmartBrain/face-recognition-app/node_modules/tsparticles-interaction-external-attract/esm/Attractor.js"],"sourcesContent":["import { Circle, ExternalInteractorBase, Vector, calcEasing, clamp, getDistances, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions;\n            if (mode !== \"attract\") {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (!container.destroyed) {\n                    if (!container.attract) {\n                        container.attract = { particles: [] };\n                    }\n                    container.attract.clicking = false;\n                }\n            }, options.interactivity.modes.attract.duration * 1000);\n        };\n    }\n    isEnabled() {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = options.interactivity.events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n    reset() {\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n            this.hoverAttract();\n        }\n        else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n            this.clickAttract();\n        }\n    }\n    hoverAttract() {\n        const container = this.container;\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const attractRadius = container.retina.attractModeDistance;\n        this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n    }\n    processAttract(position, attractRadius, area) {\n        const container = this.container;\n        const attractOptions = container.actualOptions.interactivity.modes.attract;\n        const query = container.particles.quadTree.query(area);\n        for (const particle of query) {\n            const { dx, dy, distance } = getDistances(particle.position, position);\n            const velocity = attractOptions.speed * attractOptions.factor;\n            const attractFactor = clamp(calcEasing(1 - distance / attractRadius, attractOptions.easing) * velocity, 0, attractOptions.maxSpeed);\n            const normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n            particle.position.subFrom(normVec);\n        }\n    }\n    clickAttract() {\n        const container = this.container;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        if (!container.attract.finish) {\n            if (!container.attract.count) {\n                container.attract.count = 0;\n            }\n            container.attract.count++;\n            if (container.attract.count === container.particles.count) {\n                container.attract.finish = true;\n            }\n        }\n        if (container.attract.clicking) {\n            const mousePos = container.interactivity.mouse.clickPosition;\n            if (!mousePos) {\n                return;\n            }\n            const attractRadius = container.retina.attractModeDistance;\n            this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n        }\n        else if (container.attract.clicking === false) {\n            container.attract.particles = [];\n        }\n        return;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}