{"ast":null,"code":"import { getRandom, getRangeValue, randomInRange, setRangeValue } from \"tsparticles-engine\";\nimport { Life } from \"./Options/Classes/Life\";\nexport class LifeUpdater {\n  constructor(container) {\n    this.container = container;\n  }\n\n  init(particle) {\n    const container = this.container,\n          particlesOptions = particle.options,\n          lifeOptions = particlesOptions.life;\n\n    if (!lifeOptions) {\n      return;\n    }\n\n    particle.life = {\n      delay: container.retina.reduceFactor ? getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : getRandom()) / container.retina.reduceFactor * 1000 : 0,\n      delayTime: 0,\n      duration: container.retina.reduceFactor ? getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : getRandom()) / container.retina.reduceFactor * 1000 : 0,\n      time: 0,\n      count: lifeOptions.count\n    };\n\n    if (particle.life.duration <= 0) {\n      particle.life.duration = -1;\n    }\n\n    if (particle.life.count <= 0) {\n      particle.life.count = -1;\n    }\n\n    if (particle.life) {\n      particle.spawning = particle.life.delay > 0;\n    }\n  }\n\n  isEnabled(particle) {\n    return !particle.destroyed;\n  }\n\n  loadOptions(options) {\n    if (!options.life) {\n      options.life = new Life();\n    }\n\n    for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      sources[_key - 1] = arguments[_key];\n    }\n\n    for (const source of sources) {\n      options.life.load(source === null || source === void 0 ? void 0 : source.life);\n    }\n  }\n\n  update(particle, delta) {\n    if (!this.isEnabled(particle) || !particle.life) {\n      return;\n    }\n\n    const life = particle.life;\n    let justSpawned = false;\n\n    if (particle.spawning) {\n      life.delayTime += delta.value;\n\n      if (life.delayTime >= particle.life.delay) {\n        justSpawned = true;\n        particle.spawning = false;\n        life.delayTime = 0;\n        life.time = 0;\n      } else {\n        return;\n      }\n    }\n\n    if (life.duration === -1) {\n      return;\n    }\n\n    if (particle.spawning) {\n      return;\n    }\n\n    if (justSpawned) {\n      life.time = 0;\n    } else {\n      life.time += delta.value;\n    }\n\n    if (life.time < life.duration) {\n      return;\n    }\n\n    life.time = 0;\n\n    if (particle.life.count > 0) {\n      particle.life.count--;\n    }\n\n    if (particle.life.count === 0) {\n      particle.destroy();\n      return;\n    }\n\n    const canvasSize = this.container.canvas.size,\n          widthRange = setRangeValue(0, canvasSize.width),\n          heightRange = setRangeValue(0, canvasSize.width);\n    particle.position.x = randomInRange(widthRange);\n    particle.position.y = randomInRange(heightRange);\n    particle.spawning = true;\n    life.delayTime = 0;\n    life.time = 0;\n    particle.reset();\n    const lifeOptions = particle.options.life;\n\n    if (lifeOptions) {\n      life.delay = getRangeValue(lifeOptions.delay.value) * 1000;\n      life.duration = getRangeValue(lifeOptions.duration.value) * 1000;\n    }\n  }\n\n}","map":{"version":3,"names":["getRandom","getRangeValue","randomInRange","setRangeValue","Life","LifeUpdater","constructor","container","init","particle","particlesOptions","options","lifeOptions","life","delay","retina","reduceFactor","value","sync","delayTime","duration","time","count","spawning","isEnabled","destroyed","loadOptions","sources","source","load","update","delta","justSpawned","destroy","canvasSize","canvas","size","widthRange","width","heightRange","position","x","y","reset"],"sources":["/Users/ronciszewski/Desktop/Programming/SmartBrain/face-recognition-app/frontend/node_modules/tsparticles-updater-life/esm/LifeUpdater.js"],"sourcesContent":["import { getRandom, getRangeValue, randomInRange, setRangeValue } from \"tsparticles-engine\";\nimport { Life } from \"./Options/Classes/Life\";\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            delayTime: 0,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            time: 0,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= 0) {\n            particle.life.duration = -1;\n        }\n        if (particle.life.count <= 0) {\n            particle.life.count = -1;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > 0;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source === null || source === void 0 ? void 0 : source.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        const life = particle.life;\n        let justSpawned = false;\n        if (particle.spawning) {\n            life.delayTime += delta.value;\n            if (life.delayTime >= particle.life.delay) {\n                justSpawned = true;\n                particle.spawning = false;\n                life.delayTime = 0;\n                life.time = 0;\n            }\n            else {\n                return;\n            }\n        }\n        if (life.duration === -1) {\n            return;\n        }\n        if (particle.spawning) {\n            return;\n        }\n        if (justSpawned) {\n            life.time = 0;\n        }\n        else {\n            life.time += delta.value;\n        }\n        if (life.time < life.duration) {\n            return;\n        }\n        life.time = 0;\n        if (particle.life.count > 0) {\n            particle.life.count--;\n        }\n        if (particle.life.count === 0) {\n            particle.destroy();\n            return;\n        }\n        const canvasSize = this.container.canvas.size, widthRange = setRangeValue(0, canvasSize.width), heightRange = setRangeValue(0, canvasSize.width);\n        particle.position.x = randomInRange(widthRange);\n        particle.position.y = randomInRange(heightRange);\n        particle.spawning = true;\n        life.delayTime = 0;\n        life.time = 0;\n        particle.reset();\n        const lifeOptions = particle.options.life;\n        if (lifeOptions) {\n            life.delay = getRangeValue(lifeOptions.delay.value) * 1000;\n            life.duration = getRangeValue(lifeOptions.duration.value) * 1000;\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}