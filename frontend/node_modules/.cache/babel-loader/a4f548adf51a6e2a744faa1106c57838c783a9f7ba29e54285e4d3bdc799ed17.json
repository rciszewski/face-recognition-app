{"ast":null,"code":"import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n  constructor(container) {\n    this.container = container;\n  }\n\n  init() {\n    const container = this.container,\n          options = container.actualOptions;\n    this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n    this.reduceFactor = 1;\n    const ratio = this.pixelRatio;\n\n    if (container.canvas.element) {\n      const element = container.canvas.element;\n      container.canvas.size.width = element.offsetWidth * ratio;\n      container.canvas.size.height = element.offsetHeight * ratio;\n    }\n\n    const particles = options.particles;\n    this.attractDistance = getRangeValue(particles.move.attract.distance) * ratio;\n    this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    this.maxSpeed = getRangeValue(particles.move.gravity.maxSpeed) * ratio;\n  }\n\n  initParticle(particle) {\n    const options = particle.options,\n          ratio = this.pixelRatio,\n          moveDistance = options.move.distance,\n          props = particle.retina;\n    props.attractDistance = getRangeValue(options.move.attract.distance) * ratio;\n    props.moveDrift = getRangeValue(options.move.drift) * ratio;\n    props.moveSpeed = getRangeValue(options.move.speed) * ratio;\n    props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n    const maxDistance = props.maxDistance;\n    maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n    maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n    props.maxSpeed = getRangeValue(options.move.gravity.maxSpeed) * ratio;\n  }\n\n}","map":{"version":3,"names":["getRangeValue","isSsr","Retina","constructor","container","init","options","actualOptions","pixelRatio","detectRetina","window","devicePixelRatio","reduceFactor","ratio","canvas","element","size","width","offsetWidth","height","offsetHeight","particles","attractDistance","move","attract","distance","sizeAnimationSpeed","animation","speed","maxSpeed","gravity","initParticle","particle","moveDistance","props","retina","moveDrift","drift","moveSpeed","maxDistance","horizontal","undefined","vertical"],"sources":["/Users/ronciszewski/Desktop/Programming/SmartBrain/face-recognition-app/node_modules/tsparticles-engine/esm/Core/Retina.js"],"sourcesContent":["import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        this.reduceFactor = 1;\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles;\n        this.attractDistance = getRangeValue(particles.move.attract.distance) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n        this.maxSpeed = getRangeValue(particles.move.gravity.maxSpeed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveDistance = options.move.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(options.move.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(options.move.drift) * ratio;\n        props.moveSpeed = getRangeValue(options.move.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(options.move.gravity.maxSpeed) * ratio;\n    }\n}\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,sBAA9B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,MAAMC,MAAN,CAAa;EAChBC,WAAW,CAACC,SAAD,EAAY;IACnB,KAAKA,SAAL,GAAiBA,SAAjB;EACH;;EACDC,IAAI,GAAG;IACH,MAAMD,SAAS,GAAG,KAAKA,SAAvB;IAAA,MAAkCE,OAAO,GAAGF,SAAS,CAACG,aAAtD;IACA,KAAKC,UAAL,GAAkB,CAACF,OAAO,CAACG,YAAT,IAAyBR,KAAK,EAA9B,GAAmC,CAAnC,GAAuCS,MAAM,CAACC,gBAAhE;IACA,KAAKC,YAAL,GAAoB,CAApB;IACA,MAAMC,KAAK,GAAG,KAAKL,UAAnB;;IACA,IAAIJ,SAAS,CAACU,MAAV,CAAiBC,OAArB,EAA8B;MAC1B,MAAMA,OAAO,GAAGX,SAAS,CAACU,MAAV,CAAiBC,OAAjC;MACAX,SAAS,CAACU,MAAV,CAAiBE,IAAjB,CAAsBC,KAAtB,GAA8BF,OAAO,CAACG,WAAR,GAAsBL,KAApD;MACAT,SAAS,CAACU,MAAV,CAAiBE,IAAjB,CAAsBG,MAAtB,GAA+BJ,OAAO,CAACK,YAAR,GAAuBP,KAAtD;IACH;;IACD,MAAMQ,SAAS,GAAGf,OAAO,CAACe,SAA1B;IACA,KAAKC,eAAL,GAAuBtB,aAAa,CAACqB,SAAS,CAACE,IAAV,CAAeC,OAAf,CAAuBC,QAAxB,CAAb,GAAiDZ,KAAxE;IACA,KAAKa,kBAAL,GAA0B1B,aAAa,CAACqB,SAAS,CAACL,IAAV,CAAeW,SAAf,CAAyBC,KAA1B,CAAb,GAAgDf,KAA1E;IACA,KAAKgB,QAAL,GAAgB7B,aAAa,CAACqB,SAAS,CAACE,IAAV,CAAeO,OAAf,CAAuBD,QAAxB,CAAb,GAAiDhB,KAAjE;EACH;;EACDkB,YAAY,CAACC,QAAD,EAAW;IACnB,MAAM1B,OAAO,GAAG0B,QAAQ,CAAC1B,OAAzB;IAAA,MAAkCO,KAAK,GAAG,KAAKL,UAA/C;IAAA,MAA2DyB,YAAY,GAAG3B,OAAO,CAACiB,IAAR,CAAaE,QAAvF;IAAA,MAAiGS,KAAK,GAAGF,QAAQ,CAACG,MAAlH;IACAD,KAAK,CAACZ,eAAN,GAAwBtB,aAAa,CAACM,OAAO,CAACiB,IAAR,CAAaC,OAAb,CAAqBC,QAAtB,CAAb,GAA+CZ,KAAvE;IACAqB,KAAK,CAACE,SAAN,GAAkBpC,aAAa,CAACM,OAAO,CAACiB,IAAR,CAAac,KAAd,CAAb,GAAoCxB,KAAtD;IACAqB,KAAK,CAACI,SAAN,GAAkBtC,aAAa,CAACM,OAAO,CAACiB,IAAR,CAAaK,KAAd,CAAb,GAAoCf,KAAtD;IACAqB,KAAK,CAACR,kBAAN,GAA2B1B,aAAa,CAACM,OAAO,CAACU,IAAR,CAAaW,SAAb,CAAuBC,KAAxB,CAAb,GAA8Cf,KAAzE;IACA,MAAM0B,WAAW,GAAGL,KAAK,CAACK,WAA1B;IACAA,WAAW,CAACC,UAAZ,GAAyBP,YAAY,CAACO,UAAb,KAA4BC,SAA5B,GAAwCR,YAAY,CAACO,UAAb,GAA0B3B,KAAlE,GAA0E4B,SAAnG;IACAF,WAAW,CAACG,QAAZ,GAAuBT,YAAY,CAACS,QAAb,KAA0BD,SAA1B,GAAsCR,YAAY,CAACS,QAAb,GAAwB7B,KAA9D,GAAsE4B,SAA7F;IACAP,KAAK,CAACL,QAAN,GAAiB7B,aAAa,CAACM,OAAO,CAACiB,IAAR,CAAaO,OAAb,CAAqBD,QAAtB,CAAb,GAA+ChB,KAAhE;EACH;;AA7Be"},"metadata":{},"sourceType":"module","externalDependencies":[]}