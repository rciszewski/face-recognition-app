/*! tsParticles Wobble Updater v2.0.6 by Matteo Bruni */
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("tsparticles-engine"));else if("function"==typeof define&&define.amd)define(["tsparticles-engine"],t);else{var o="object"==typeof exports?t(require("tsparticles-engine")):t(e.window);for(var n in o)("object"==typeof exports?exports:e)[n]=o[n]}}(this,(e=>(()=>{"use strict";var t={818:t=>{t.exports=e}},o={};function n(e){var r=o[e];if(void 0!==r)return r.exports;var a=o[e]={exports:{}};return t[e](a,a.exports,n),a.exports}n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};return(()=>{n.r(r),n.d(r,{loadWobbleUpdater:()=>o});var e=n(818);class t{constructor(e){this.container=e}init(t){const o=t.options.wobble;o.enable?t.wobble={angle:Math.random()*Math.PI*2,speed:(0,e.getRangeValue)(o.speed)/360}:t.wobble={angle:0,speed:0},t.retina.wobbleDistance=(0,e.getRangeValue)(o.distance)*this.container.retina.pixelRatio}isEnabled(e){return!e.destroyed&&!e.spawning&&e.options.wobble.enable}update(e,t){this.isEnabled(e)&&function(e,t){var o;if(!e.options.wobble.enable||!e.wobble)return;const n=e.wobble.speed*t.factor,r=(null!==(o=e.retina.wobbleDistance)&&void 0!==o?o:0)*t.factor/(1e3/60),a=2*Math.PI;e.wobble.angle+=n,e.wobble.angle>a&&(e.wobble.angle-=a),e.position.x+=r*Math.cos(e.wobble.angle),e.position.y+=r*Math.abs(Math.sin(e.wobble.angle))}(e,t)}}async function o(e){await e.addParticleUpdater("wobble",(e=>new t(e)))}})(),r})()));